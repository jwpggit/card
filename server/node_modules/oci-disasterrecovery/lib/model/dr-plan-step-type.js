"use strict";
/**
 * Full Stack Disaster Recovery API
 * Use the Full Stack Disaster Recovery (FSDR) API to manage disaster recovery for business applications.
FSDR is an OCI disaster recovery orchestration and management service that provides comprehensive disaster recovery
capabilities for all layers of an application stack, including infrastructure, middleware, database, and application.

 * OpenAPI spec version: 20220125
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DrPlanStepType = void 0;
/**
 * Step types in a DR Plan.
 *
 **/
var DrPlanStepType;
(function (DrPlanStepType) {
    DrPlanStepType["ComputeInstanceStopPrecheck"] = "COMPUTE_INSTANCE_STOP_PRECHECK";
    DrPlanStepType["ComputeInstanceLaunchPrecheck"] = "COMPUTE_INSTANCE_LAUNCH_PRECHECK";
    DrPlanStepType["ComputeInstanceTerminatePrecheck"] = "COMPUTE_INSTANCE_TERMINATE_PRECHECK";
    DrPlanStepType["ComputeInstanceRemovePrecheck"] = "COMPUTE_INSTANCE_REMOVE_PRECHECK";
    DrPlanStepType["VolumeGroupRestoreSwitchoverPrecheck"] = "VOLUME_GROUP_RESTORE_SWITCHOVER_PRECHECK";
    DrPlanStepType["VolumeGroupRestoreFailoverPrecheck"] = "VOLUME_GROUP_RESTORE_FAILOVER_PRECHECK";
    DrPlanStepType["DatabaseSwitchoverPrecheck"] = "DATABASE_SWITCHOVER_PRECHECK";
    DrPlanStepType["DatabaseFailoverPrecheck"] = "DATABASE_FAILOVER_PRECHECK";
    DrPlanStepType["AutonomousDatabaseSwitchoverPrecheck"] = "AUTONOMOUS_DATABASE_SWITCHOVER_PRECHECK";
    DrPlanStepType["AutonomousDatabaseFailoverPrecheck"] = "AUTONOMOUS_DATABASE_FAILOVER_PRECHECK";
    DrPlanStepType["UserDefinedPrecheck"] = "USER_DEFINED_PRECHECK";
    DrPlanStepType["ComputeInstanceLaunch"] = "COMPUTE_INSTANCE_LAUNCH";
    DrPlanStepType["ComputeInstanceStop"] = "COMPUTE_INSTANCE_STOP";
    DrPlanStepType["ComputeInstanceTerminate"] = "COMPUTE_INSTANCE_TERMINATE";
    DrPlanStepType["ComputeInstanceRemove"] = "COMPUTE_INSTANCE_REMOVE";
    DrPlanStepType["DatabaseSwitchover"] = "DATABASE_SWITCHOVER";
    DrPlanStepType["DatabaseFailover"] = "DATABASE_FAILOVER";
    DrPlanStepType["AutonomousDatabaseSwitchover"] = "AUTONOMOUS_DATABASE_SWITCHOVER";
    DrPlanStepType["AutonomousDatabaseFailover"] = "AUTONOMOUS_DATABASE_FAILOVER";
    DrPlanStepType["VolumeGroupRestoreSwitchover"] = "VOLUME_GROUP_RESTORE_SWITCHOVER";
    DrPlanStepType["VolumeGroupRestoreFailover"] = "VOLUME_GROUP_RESTORE_FAILOVER";
    DrPlanStepType["VolumeGroupReverse"] = "VOLUME_GROUP_REVERSE";
    DrPlanStepType["VolumeGroupDelete"] = "VOLUME_GROUP_DELETE";
    DrPlanStepType["VolumeGroupRemove"] = "VOLUME_GROUP_REMOVE";
    DrPlanStepType["VolumeGroupTerminate"] = "VOLUME_GROUP_TERMINATE";
    DrPlanStepType["UserDefined"] = "USER_DEFINED";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    DrPlanStepType["UnknownValue"] = "UNKNOWN_VALUE";
})(DrPlanStepType = exports.DrPlanStepType || (exports.DrPlanStepType = {}));
(function (DrPlanStepType) {
    function getJsonObj(obj) {
        return obj;
    }
    DrPlanStepType.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    DrPlanStepType.getDeserializedJsonObj = getDeserializedJsonObj;
})(DrPlanStepType = exports.DrPlanStepType || (exports.DrPlanStepType = {}));
//# sourceMappingURL=dr-plan-step-type.js.map