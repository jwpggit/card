/**
 * Cloud Guard and Security Zones API
 * Use the Cloud Guard and Security Zones API to automate processes that you would otherwise perform through the Cloud Guard Console or the Security Zones Console. For more information on these services, see the [Cloud Guard](/iaas/cloud-guard/home.htm) and [Security Zones](/iaas/security-zone/home.htm) documentation.

**Note:** For Cloud Guard, you can perform Create, Update, and Delete operations only from the reporting region of your Cloud Guard tenancy. You can perform Read operations from any region.

 * OpenAPI spec version: 20200131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Target Detector recipe
 */
export interface TargetDetectorRecipe {
    /**
     * Ocid for detector recipe
     */
    "id": string;
    /**
     * Display name of detector recipe.
     */
    "displayName": string;
    /**
     * Detector recipe description.
     */
    "description"?: string;
    /**
     * compartmentId of detector recipe
     */
    "compartmentId": string;
    /**
     * Unique identifier for Detector Recipe of which this is an extension
     */
    "detectorRecipeId": string;
    /**
     * Owner of detector recipe
     */
    "owner": model.OwnerType;
    /**
     * Type of detector
     */
    "detector": model.DetectorEnum;
    /**
     * List of detector rules for the detector type for recipe - user input
     */
    "detectorRules"?: Array<model.TargetDetectorRecipeDetectorRule>;
    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     */
    "effectiveDetectorRules"?: Array<model.TargetDetectorRecipeDetectorRule>;
    /**
     * The date and time the target detector recipe was created. Format defined by RFC3339.
     */
    "timeCreated"?: Date;
    /**
     * The date and time the target detector recipe was updated. Format defined by RFC3339.
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the resource.
     */
    "lifecycleState"?: model.LifecycleState;
    /**
     * The number of days for which source data is retained Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "sourceDataRetention"?: number;
}
export declare namespace TargetDetectorRecipe {
    function getJsonObj(obj: TargetDetectorRecipe): object;
    function getDeserializedJsonObj(obj: TargetDetectorRecipe): object;
}
