/**
 * Network Monitoring API
 * Use the Network Monitoring API to troubleshoot routing and security issues for resources such as virtual cloud networks (VCNs) and compute instances. For more information, see the console
documentation for the [Network Path Analyzer](/iaas/Content/Network/Concepts/path_analyzer.htm) tool.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as ActionType from "./action-type";
export import ActionType = ActionType.ActionType;
import * as AddDrgRouteDistributionStatementDetails from "./add-drg-route-distribution-statement-details";
export import AddDrgRouteDistributionStatementDetails = AddDrgRouteDistributionStatementDetails.AddDrgRouteDistributionStatementDetails;
import * as AddDrgRouteDistributionStatementsDetails from "./add-drg-route-distribution-statements-details";
export import AddDrgRouteDistributionStatementsDetails = AddDrgRouteDistributionStatementsDetails.AddDrgRouteDistributionStatementsDetails;
import * as AddDrgRouteRuleDetails from "./add-drg-route-rule-details";
export import AddDrgRouteRuleDetails = AddDrgRouteRuleDetails.AddDrgRouteRuleDetails;
import * as AddDrgRouteRulesDetails from "./add-drg-route-rules-details";
export import AddDrgRouteRulesDetails = AddDrgRouteRulesDetails.AddDrgRouteRulesDetails;
import * as AddNetworkSecurityGroupSecurityRulesDetails from "./add-network-security-group-security-rules-details";
export import AddNetworkSecurityGroupSecurityRulesDetails = AddNetworkSecurityGroupSecurityRulesDetails.AddNetworkSecurityGroupSecurityRulesDetails;
import * as AddSecurityRuleDetails from "./add-security-rule-details";
export import AddSecurityRuleDetails = AddSecurityRuleDetails.AddSecurityRuleDetails;
import * as AddedNetworkSecurityGroupSecurityRules from "./added-network-security-group-security-rules";
export import AddedNetworkSecurityGroupSecurityRules = AddedNetworkSecurityGroupSecurityRules.AddedNetworkSecurityGroupSecurityRules;
import * as AllowedSecurityActionDetails from "./allowed-security-action-details";
export import AllowedSecurityActionDetails = AllowedSecurityActionDetails.AllowedSecurityActionDetails;
import * as AllowedSecurityConfiguration from "./allowed-security-configuration";
export import AllowedSecurityConfiguration = AllowedSecurityConfiguration.AllowedSecurityConfiguration;
import * as BulkAddVirtualCircuitPublicPrefixesDetails from "./bulk-add-virtual-circuit-public-prefixes-details";
export import BulkAddVirtualCircuitPublicPrefixesDetails = BulkAddVirtualCircuitPublicPrefixesDetails.BulkAddVirtualCircuitPublicPrefixesDetails;
import * as BulkDeleteVirtualCircuitPublicPrefixesDetails from "./bulk-delete-virtual-circuit-public-prefixes-details";
export import BulkDeleteVirtualCircuitPublicPrefixesDetails = BulkDeleteVirtualCircuitPublicPrefixesDetails.BulkDeleteVirtualCircuitPublicPrefixesDetails;
import * as ChangePathAnalyzerTestCompartmentDetails from "./change-path-analyzer-test-compartment-details";
export import ChangePathAnalyzerTestCompartmentDetails = ChangePathAnalyzerTestCompartmentDetails.ChangePathAnalyzerTestCompartmentDetails;
import * as CompartmentInternal from "./compartment-internal";
export import CompartmentInternal = CompartmentInternal.CompartmentInternal;
import * as ConnectLocalPeeringGatewaysDetails from "./connect-local-peering-gateways-details";
export import ConnectLocalPeeringGatewaysDetails = ConnectLocalPeeringGatewaysDetails.ConnectLocalPeeringGatewaysDetails;
import * as ConnectRemotePeeringConnectionsDetails from "./connect-remote-peering-connections-details";
export import ConnectRemotePeeringConnectionsDetails = ConnectRemotePeeringConnectionsDetails.ConnectRemotePeeringConnectionsDetails;
import * as Cpe from "./cpe";
export import Cpe = Cpe.Cpe;
import * as CreateCpeDetails from "./create-cpe-details";
export import CreateCpeDetails = CreateCpeDetails.CreateCpeDetails;
import * as CreateCrossConnectDetails from "./create-cross-connect-details";
export import CreateCrossConnectDetails = CreateCrossConnectDetails.CreateCrossConnectDetails;
import * as CreateCrossConnectGroupDetails from "./create-cross-connect-group-details";
export import CreateCrossConnectGroupDetails = CreateCrossConnectGroupDetails.CreateCrossConnectGroupDetails;
import * as CreateDhcpDetails from "./create-dhcp-details";
export import CreateDhcpDetails = CreateDhcpDetails.CreateDhcpDetails;
import * as CreateDrgAttachmentDetails from "./create-drg-attachment-details";
export import CreateDrgAttachmentDetails = CreateDrgAttachmentDetails.CreateDrgAttachmentDetails;
import * as CreateDrgDetails from "./create-drg-details";
export import CreateDrgDetails = CreateDrgDetails.CreateDrgDetails;
import * as CreateDrgRouteDistributionDetails from "./create-drg-route-distribution-details";
export import CreateDrgRouteDistributionDetails = CreateDrgRouteDistributionDetails.CreateDrgRouteDistributionDetails;
import * as CreateDrgRouteTableDetails from "./create-drg-route-table-details";
export import CreateDrgRouteTableDetails = CreateDrgRouteTableDetails.CreateDrgRouteTableDetails;
import * as CreateIPSecConnectionDetails from "./create-ip-sec-connection-details";
export import CreateIPSecConnectionDetails = CreateIPSecConnectionDetails.CreateIPSecConnectionDetails;
import * as CreateInternetGatewayDetails from "./create-internet-gateway-details";
export import CreateInternetGatewayDetails = CreateInternetGatewayDetails.CreateInternetGatewayDetails;
import * as CreateIpv6Details from "./create-ipv6-details";
export import CreateIpv6Details = CreateIpv6Details.CreateIpv6Details;
import * as CreateLocalPeeringGatewayDetails from "./create-local-peering-gateway-details";
export import CreateLocalPeeringGatewayDetails = CreateLocalPeeringGatewayDetails.CreateLocalPeeringGatewayDetails;
import * as CreateNetworkSecurityGroupDetails from "./create-network-security-group-details";
export import CreateNetworkSecurityGroupDetails = CreateNetworkSecurityGroupDetails.CreateNetworkSecurityGroupDetails;
import * as CreatePathAnalyzerTestDetails from "./create-path-analyzer-test-details";
export import CreatePathAnalyzerTestDetails = CreatePathAnalyzerTestDetails.CreatePathAnalyzerTestDetails;
import * as CreatePrivateIpDetails from "./create-private-ip-details";
export import CreatePrivateIpDetails = CreatePrivateIpDetails.CreatePrivateIpDetails;
import * as CreatePublicIpDetails from "./create-public-ip-details";
export import CreatePublicIpDetails = CreatePublicIpDetails.CreatePublicIpDetails;
import * as CreateRemotePeeringConnectionDetails from "./create-remote-peering-connection-details";
export import CreateRemotePeeringConnectionDetails = CreateRemotePeeringConnectionDetails.CreateRemotePeeringConnectionDetails;
import * as CreateRouteTableDetails from "./create-route-table-details";
export import CreateRouteTableDetails = CreateRouteTableDetails.CreateRouteTableDetails;
import * as CreateSecurityListDetails from "./create-security-list-details";
export import CreateSecurityListDetails = CreateSecurityListDetails.CreateSecurityListDetails;
import * as CreateServiceGatewayDetails from "./create-service-gateway-details";
export import CreateServiceGatewayDetails = CreateServiceGatewayDetails.CreateServiceGatewayDetails;
import * as CreateSubnetDetails from "./create-subnet-details";
export import CreateSubnetDetails = CreateSubnetDetails.CreateSubnetDetails;
import * as CreateVcnDetails from "./create-vcn-details";
export import CreateVcnDetails = CreateVcnDetails.CreateVcnDetails;
import * as CreateVirtualCircuitDetails from "./create-virtual-circuit-details";
export import CreateVirtualCircuitDetails = CreateVirtualCircuitDetails.CreateVirtualCircuitDetails;
import * as CreateVirtualCircuitPublicPrefixDetails from "./create-virtual-circuit-public-prefix-details";
export import CreateVirtualCircuitPublicPrefixDetails = CreateVirtualCircuitPublicPrefixDetails.CreateVirtualCircuitPublicPrefixDetails;
import * as CreateVnicDetails from "./create-vnic-details";
export import CreateVnicDetails = CreateVnicDetails.CreateVnicDetails;
import * as CrossConnect from "./cross-connect";
export import CrossConnect = CrossConnect.CrossConnect;
import * as CrossConnectGroup from "./cross-connect-group";
export import CrossConnectGroup = CrossConnectGroup.CrossConnectGroup;
import * as CrossConnectLocation from "./cross-connect-location";
export import CrossConnectLocation = CrossConnectLocation.CrossConnectLocation;
import * as CrossConnectMapping from "./cross-connect-mapping";
export import CrossConnectMapping = CrossConnectMapping.CrossConnectMapping;
import * as CrossConnectPortSpeedShape from "./cross-connect-port-speed-shape";
export import CrossConnectPortSpeedShape = CrossConnectPortSpeedShape.CrossConnectPortSpeedShape;
import * as CrossConnectStatus from "./cross-connect-status";
export import CrossConnectStatus = CrossConnectStatus.CrossConnectStatus;
import * as DefaultDrgRouteTables from "./default-drg-route-tables";
export import DefaultDrgRouteTables = DefaultDrgRouteTables.DefaultDrgRouteTables;
import * as DeleteVirtualCircuitPublicPrefixDetails from "./delete-virtual-circuit-public-prefix-details";
export import DeleteVirtualCircuitPublicPrefixDetails = DeleteVirtualCircuitPublicPrefixDetails.DeleteVirtualCircuitPublicPrefixDetails;
import * as DeniedSecurityActionDetails from "./denied-security-action-details";
export import DeniedSecurityActionDetails = DeniedSecurityActionDetails.DeniedSecurityActionDetails;
import * as DhcpOption from "./dhcp-option";
export import DhcpOption = DhcpOption.DhcpOption;
import * as DhcpOptions from "./dhcp-options";
export import DhcpOptions = DhcpOptions.DhcpOptions;
import * as Drg from "./drg";
export import Drg = Drg.Drg;
import * as DrgAttachment from "./drg-attachment";
export import DrgAttachment = DrgAttachment.DrgAttachment;
import * as DrgAttachmentInfo from "./drg-attachment-info";
export import DrgAttachmentInfo = DrgAttachmentInfo.DrgAttachmentInfo;
import * as DrgAttachmentNetworkCreateDetails from "./drg-attachment-network-create-details";
export import DrgAttachmentNetworkCreateDetails = DrgAttachmentNetworkCreateDetails.DrgAttachmentNetworkCreateDetails;
import * as DrgAttachmentNetworkDetails from "./drg-attachment-network-details";
export import DrgAttachmentNetworkDetails = DrgAttachmentNetworkDetails.DrgAttachmentNetworkDetails;
import * as DrgAttachmentNetworkUpdateDetails from "./drg-attachment-network-update-details";
export import DrgAttachmentNetworkUpdateDetails = DrgAttachmentNetworkUpdateDetails.DrgAttachmentNetworkUpdateDetails;
import * as DrgRouteDistribution from "./drg-route-distribution";
export import DrgRouteDistribution = DrgRouteDistribution.DrgRouteDistribution;
import * as DrgRouteDistributionMatchCriteria from "./drg-route-distribution-match-criteria";
export import DrgRouteDistributionMatchCriteria = DrgRouteDistributionMatchCriteria.DrgRouteDistributionMatchCriteria;
import * as DrgRouteDistributionStatement from "./drg-route-distribution-statement";
export import DrgRouteDistributionStatement = DrgRouteDistributionStatement.DrgRouteDistributionStatement;
import * as DrgRouteRule from "./drg-route-rule";
export import DrgRouteRule = DrgRouteRule.DrgRouteRule;
import * as DrgRouteTable from "./drg-route-table";
export import DrgRouteTable = DrgRouteTable.DrgRouteTable;
import * as EgressSecurityRule from "./egress-security-rule";
export import EgressSecurityRule = EgressSecurityRule.EgressSecurityRule;
import * as EgressTrafficSpec from "./egress-traffic-spec";
export import EgressTrafficSpec = EgressTrafficSpec.EgressTrafficSpec;
import * as Endpoint from "./endpoint";
export import Endpoint = Endpoint.Endpoint;
import * as FastConnectProviderService from "./fast-connect-provider-service";
export import FastConnectProviderService = FastConnectProviderService.FastConnectProviderService;
import * as ForwardedRoutingActionDetails from "./forwarded-routing-action-details";
export import ForwardedRoutingActionDetails = ForwardedRoutingActionDetails.ForwardedRoutingActionDetails;
import * as ForwardedRoutingConfiguration from "./forwarded-routing-configuration";
export import ForwardedRoutingConfiguration = ForwardedRoutingConfiguration.ForwardedRoutingConfiguration;
import * as GetPathAnalysisDetails from "./get-path-analysis-details";
export import GetPathAnalysisDetails = GetPathAnalysisDetails.GetPathAnalysisDetails;
import * as GetPublicIpByIpAddressDetails from "./get-public-ip-by-ip-address-details";
export import GetPublicIpByIpAddressDetails = GetPublicIpByIpAddressDetails.GetPublicIpByIpAddressDetails;
import * as GetPublicIpByPrivateIpIdDetails from "./get-public-ip-by-private-ip-id-details";
export import GetPublicIpByPrivateIpIdDetails = GetPublicIpByPrivateIpIdDetails.GetPublicIpByPrivateIpIdDetails;
import * as IPSecConnection from "./i-psec-connection";
export import IPSecConnection = IPSecConnection.IPSecConnection;
import * as IPSecConnectionDeviceConfig from "./i-psec-connection-device-config";
export import IPSecConnectionDeviceConfig = IPSecConnectionDeviceConfig.IPSecConnectionDeviceConfig;
import * as IPSecConnectionDeviceStatus from "./i-psec-connection-device-status";
export import IPSecConnectionDeviceStatus = IPSecConnectionDeviceStatus.IPSecConnectionDeviceStatus;
import * as IcmpOptions from "./icmp-options";
export import IcmpOptions = IcmpOptions.IcmpOptions;
import * as IngressSecurityRule from "./ingress-security-rule";
export import IngressSecurityRule = IngressSecurityRule.IngressSecurityRule;
import * as InternetGateway from "./internet-gateway";
export import InternetGateway = InternetGateway.InternetGateway;
import * as Ipv6 from "./ipv6";
export import Ipv6 = Ipv6.Ipv6;
import * as LetterOfAuthority from "./letter-of-authority";
export import LetterOfAuthority = LetterOfAuthority.LetterOfAuthority;
import * as LocalPeeringGateway from "./local-peering-gateway";
export import LocalPeeringGateway = LocalPeeringGateway.LocalPeeringGateway;
import * as NetworkSecurityGroup from "./network-security-group";
export import NetworkSecurityGroup = NetworkSecurityGroup.NetworkSecurityGroup;
import * as NetworkSecurityGroupVnic from "./network-security-group-vnic";
export import NetworkSecurityGroupVnic = NetworkSecurityGroupVnic.NetworkSecurityGroupVnic;
import * as NoRouteRoutingActionDetails from "./no-route-routing-action-details";
export import NoRouteRoutingActionDetails = NoRouteRoutingActionDetails.NoRouteRoutingActionDetails;
import * as OperationStatus from "./operation-status";
export import OperationStatus = OperationStatus.OperationStatus;
import * as OperationType from "./operation-type";
export import OperationType = OperationType.OperationType;
import * as Path from "./path";
export import Path = Path.Path;
import * as PathAnalyzerTest from "./path-analyzer-test";
export import PathAnalyzerTest = PathAnalyzerTest.PathAnalyzerTest;
import * as PathAnalyzerTestCollection from "./path-analyzer-test-collection";
export import PathAnalyzerTestCollection = PathAnalyzerTestCollection.PathAnalyzerTestCollection;
import * as PathAnalyzerTestSummary from "./path-analyzer-test-summary";
export import PathAnalyzerTestSummary = PathAnalyzerTestSummary.PathAnalyzerTestSummary;
import * as PortRange from "./port-range";
export import PortRange = PortRange.PortRange;
import * as PrivateIp from "./private-ip";
export import PrivateIp = PrivateIp.PrivateIp;
import * as ProtocolParameters from "./protocol-parameters";
export import ProtocolParameters = ProtocolParameters.ProtocolParameters;
import * as PublicIp from "./public-ip";
export import PublicIp = PublicIp.PublicIp;
import * as QueryOptions from "./query-options";
export import QueryOptions = QueryOptions.QueryOptions;
import * as RemotePeeringConnection from "./remote-peering-connection";
export import RemotePeeringConnection = RemotePeeringConnection.RemotePeeringConnection;
import * as RemoveDrgRouteDistributionStatementsDetails from "./remove-drg-route-distribution-statements-details";
export import RemoveDrgRouteDistributionStatementsDetails = RemoveDrgRouteDistributionStatementsDetails.RemoveDrgRouteDistributionStatementsDetails;
import * as RemoveDrgRouteRulesDetails from "./remove-drg-route-rules-details";
export import RemoveDrgRouteRulesDetails = RemoveDrgRouteRulesDetails.RemoveDrgRouteRulesDetails;
import * as RemoveNetworkSecurityGroupSecurityRulesDetails from "./remove-network-security-group-security-rules-details";
export import RemoveNetworkSecurityGroupSecurityRulesDetails = RemoveNetworkSecurityGroupSecurityRulesDetails.RemoveNetworkSecurityGroupSecurityRulesDetails;
import * as RouteRule from "./route-rule";
export import RouteRule = RouteRule.RouteRule;
import * as RouteTable from "./route-table";
export import RouteTable = RouteTable.RouteTable;
import * as RoutingAction from "./routing-action";
export import RoutingAction = RoutingAction.RoutingAction;
import * as SecurityAction from "./security-action";
export import SecurityAction = SecurityAction.SecurityAction;
import * as SecurityList from "./security-list";
export import SecurityList = SecurityList.SecurityList;
import * as SecurityRule from "./security-rule";
export import SecurityRule = SecurityRule.SecurityRule;
import * as Service from "./service";
export import Service = Service.Service;
import * as ServiceGateway from "./service-gateway";
export import ServiceGateway = ServiceGateway.ServiceGateway;
import * as ServiceIdRequestDetails from "./service-id-request-details";
export import ServiceIdRequestDetails = ServiceIdRequestDetails.ServiceIdRequestDetails;
import * as ServiceIdResponseDetails from "./service-id-response-details";
export import ServiceIdResponseDetails = ServiceIdResponseDetails.ServiceIdResponseDetails;
import * as SortOrder from "./sort-order";
export import SortOrder = SortOrder.SortOrder;
import * as Subnet from "./subnet";
export import Subnet = Subnet.Subnet;
import * as TcpOptions from "./tcp-options";
export import TcpOptions = TcpOptions.TcpOptions;
import * as Topology from "./topology";
export import Topology = Topology.Topology;
import * as TopologyAssociatedWithRelationshipDetails from "./topology-associated-with-relationship-details";
export import TopologyAssociatedWithRelationshipDetails = TopologyAssociatedWithRelationshipDetails.TopologyAssociatedWithRelationshipDetails;
import * as TopologyEntityRelationship from "./topology-entity-relationship";
export import TopologyEntityRelationship = TopologyEntityRelationship.TopologyEntityRelationship;
import * as TopologyRoutesToRelationshipDetails from "./topology-routes-to-relationship-details";
export import TopologyRoutesToRelationshipDetails = TopologyRoutesToRelationshipDetails.TopologyRoutesToRelationshipDetails;
import * as TrafficNode from "./traffic-node";
export import TrafficNode = TrafficNode.TrafficNode;
import * as TrafficProtocolParameters from "./traffic-protocol-parameters";
export import TrafficProtocolParameters = TrafficProtocolParameters.TrafficProtocolParameters;
import * as TrafficRoute from "./traffic-route";
export import TrafficRoute = TrafficRoute.TrafficRoute;
import * as TunnelConfig from "./tunnel-config";
export import TunnelConfig = TunnelConfig.TunnelConfig;
import * as TunnelStatus from "./tunnel-status";
export import TunnelStatus = TunnelStatus.TunnelStatus;
import * as UdpOptions from "./udp-options";
export import UdpOptions = UdpOptions.UdpOptions;
import * as UpdateCpeDetails from "./update-cpe-details";
export import UpdateCpeDetails = UpdateCpeDetails.UpdateCpeDetails;
import * as UpdateCrossConnectDetails from "./update-cross-connect-details";
export import UpdateCrossConnectDetails = UpdateCrossConnectDetails.UpdateCrossConnectDetails;
import * as UpdateCrossConnectGroupDetails from "./update-cross-connect-group-details";
export import UpdateCrossConnectGroupDetails = UpdateCrossConnectGroupDetails.UpdateCrossConnectGroupDetails;
import * as UpdateDhcpDetails from "./update-dhcp-details";
export import UpdateDhcpDetails = UpdateDhcpDetails.UpdateDhcpDetails;
import * as UpdateDrgAttachmentDetails from "./update-drg-attachment-details";
export import UpdateDrgAttachmentDetails = UpdateDrgAttachmentDetails.UpdateDrgAttachmentDetails;
import * as UpdateDrgDetails from "./update-drg-details";
export import UpdateDrgDetails = UpdateDrgDetails.UpdateDrgDetails;
import * as UpdateDrgRouteDistributionDetails from "./update-drg-route-distribution-details";
export import UpdateDrgRouteDistributionDetails = UpdateDrgRouteDistributionDetails.UpdateDrgRouteDistributionDetails;
import * as UpdateDrgRouteDistributionStatementDetails from "./update-drg-route-distribution-statement-details";
export import UpdateDrgRouteDistributionStatementDetails = UpdateDrgRouteDistributionStatementDetails.UpdateDrgRouteDistributionStatementDetails;
import * as UpdateDrgRouteDistributionStatementsDetails from "./update-drg-route-distribution-statements-details";
export import UpdateDrgRouteDistributionStatementsDetails = UpdateDrgRouteDistributionStatementsDetails.UpdateDrgRouteDistributionStatementsDetails;
import * as UpdateDrgRouteRuleDetails from "./update-drg-route-rule-details";
export import UpdateDrgRouteRuleDetails = UpdateDrgRouteRuleDetails.UpdateDrgRouteRuleDetails;
import * as UpdateDrgRouteRulesDetails from "./update-drg-route-rules-details";
export import UpdateDrgRouteRulesDetails = UpdateDrgRouteRulesDetails.UpdateDrgRouteRulesDetails;
import * as UpdateDrgRouteTableDetails from "./update-drg-route-table-details";
export import UpdateDrgRouteTableDetails = UpdateDrgRouteTableDetails.UpdateDrgRouteTableDetails;
import * as UpdateIPSecConnectionDetails from "./update-ip-sec-connection-details";
export import UpdateIPSecConnectionDetails = UpdateIPSecConnectionDetails.UpdateIPSecConnectionDetails;
import * as UpdateInternetGatewayDetails from "./update-internet-gateway-details";
export import UpdateInternetGatewayDetails = UpdateInternetGatewayDetails.UpdateInternetGatewayDetails;
import * as UpdateIpv6Details from "./update-ipv6-details";
export import UpdateIpv6Details = UpdateIpv6Details.UpdateIpv6Details;
import * as UpdateLocalPeeringGatewayDetails from "./update-local-peering-gateway-details";
export import UpdateLocalPeeringGatewayDetails = UpdateLocalPeeringGatewayDetails.UpdateLocalPeeringGatewayDetails;
import * as UpdateNetworkSecurityGroupDetails from "./update-network-security-group-details";
export import UpdateNetworkSecurityGroupDetails = UpdateNetworkSecurityGroupDetails.UpdateNetworkSecurityGroupDetails;
import * as UpdateNetworkSecurityGroupSecurityRulesDetails from "./update-network-security-group-security-rules-details";
export import UpdateNetworkSecurityGroupSecurityRulesDetails = UpdateNetworkSecurityGroupSecurityRulesDetails.UpdateNetworkSecurityGroupSecurityRulesDetails;
import * as UpdatePathAnalyzerTestDetails from "./update-path-analyzer-test-details";
export import UpdatePathAnalyzerTestDetails = UpdatePathAnalyzerTestDetails.UpdatePathAnalyzerTestDetails;
import * as UpdatePrivateIpDetails from "./update-private-ip-details";
export import UpdatePrivateIpDetails = UpdatePrivateIpDetails.UpdatePrivateIpDetails;
import * as UpdatePublicIpDetails from "./update-public-ip-details";
export import UpdatePublicIpDetails = UpdatePublicIpDetails.UpdatePublicIpDetails;
import * as UpdateRemotePeeringConnectionDetails from "./update-remote-peering-connection-details";
export import UpdateRemotePeeringConnectionDetails = UpdateRemotePeeringConnectionDetails.UpdateRemotePeeringConnectionDetails;
import * as UpdateRouteTableDetails from "./update-route-table-details";
export import UpdateRouteTableDetails = UpdateRouteTableDetails.UpdateRouteTableDetails;
import * as UpdateSecurityListDetails from "./update-security-list-details";
export import UpdateSecurityListDetails = UpdateSecurityListDetails.UpdateSecurityListDetails;
import * as UpdateSecurityRuleDetails from "./update-security-rule-details";
export import UpdateSecurityRuleDetails = UpdateSecurityRuleDetails.UpdateSecurityRuleDetails;
import * as UpdateServiceGatewayDetails from "./update-service-gateway-details";
export import UpdateServiceGatewayDetails = UpdateServiceGatewayDetails.UpdateServiceGatewayDetails;
import * as UpdateSubnetDetails from "./update-subnet-details";
export import UpdateSubnetDetails = UpdateSubnetDetails.UpdateSubnetDetails;
import * as UpdateVcnDetails from "./update-vcn-details";
export import UpdateVcnDetails = UpdateVcnDetails.UpdateVcnDetails;
import * as UpdateVirtualCircuitDetails from "./update-virtual-circuit-details";
export import UpdateVirtualCircuitDetails = UpdateVirtualCircuitDetails.UpdateVirtualCircuitDetails;
import * as UpdateVnicDetails from "./update-vnic-details";
export import UpdateVnicDetails = UpdateVnicDetails.UpdateVnicDetails;
import * as UpdatedNetworkSecurityGroupSecurityRules from "./updated-network-security-group-security-rules";
export import UpdatedNetworkSecurityGroupSecurityRules = UpdatedNetworkSecurityGroupSecurityRules.UpdatedNetworkSecurityGroupSecurityRules;
import * as UpgradeStatus from "./upgrade-status";
export import UpgradeStatus = UpgradeStatus.UpgradeStatus;
import * as Vcn from "./vcn";
export import Vcn = Vcn.Vcn;
import * as VirtualCircuit from "./virtual-circuit";
export import VirtualCircuit = VirtualCircuit.VirtualCircuit;
import * as VirtualCircuitBandwidthShape from "./virtual-circuit-bandwidth-shape";
export import VirtualCircuitBandwidthShape = VirtualCircuitBandwidthShape.VirtualCircuitBandwidthShape;
import * as VirtualCircuitPublicPrefix from "./virtual-circuit-public-prefix";
export import VirtualCircuitPublicPrefix = VirtualCircuitPublicPrefix.VirtualCircuitPublicPrefix;
import * as Vnic from "./vnic";
export import Vnic = Vnic.Vnic;
import * as WorkRequest from "./work-request";
export import WorkRequest = WorkRequest.WorkRequest;
import * as WorkRequestError from "./work-request-error";
export import WorkRequestError = WorkRequestError.WorkRequestError;
import * as WorkRequestErrorCollection from "./work-request-error-collection";
export import WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
import * as WorkRequestLogEntry from "./work-request-log-entry";
export import WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
import * as WorkRequestLogEntryCollection from "./work-request-log-entry-collection";
export import WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
import * as WorkRequestResource from "./work-request-resource";
export import WorkRequestResource = WorkRequestResource.WorkRequestResource;
import * as WorkRequestResult from "./work-request-result";
export import WorkRequestResult = WorkRequestResult.WorkRequestResult;
import * as WorkRequestResultCollection from "./work-request-result-collection";
export import WorkRequestResultCollection = WorkRequestResultCollection.WorkRequestResultCollection;
import * as WorkRequestSummary from "./work-request-summary";
export import WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;
import * as WorkRequestSummaryCollection from "./work-request-summary-collection";
export import WorkRequestSummaryCollection = WorkRequestSummaryCollection.WorkRequestSummaryCollection;
import * as AccessDeniedTrafficNode from "./access-denied-traffic-node";
export import AccessDeniedTrafficNode = AccessDeniedTrafficNode.AccessDeniedTrafficNode;
import * as AdhocGetPathAnalysisDetails from "./adhoc-get-path-analysis-details";
export import AdhocGetPathAnalysisDetails = AdhocGetPathAnalysisDetails.AdhocGetPathAnalysisDetails;
import * as AllowedSecurityAction from "./allowed-security-action";
export import AllowedSecurityAction = AllowedSecurityAction.AllowedSecurityAction;
import * as ComputeInstanceEndpoint from "./compute-instance-endpoint";
export import ComputeInstanceEndpoint = ComputeInstanceEndpoint.ComputeInstanceEndpoint;
import * as DeniedSecurityAction from "./denied-security-action";
export import DeniedSecurityAction = DeniedSecurityAction.DeniedSecurityAction;
import * as DhcpDnsOption from "./dhcp-dns-option";
export import DhcpDnsOption = DhcpDnsOption.DhcpDnsOption;
import * as DhcpSearchDomainOption from "./dhcp-search-domain-option";
export import DhcpSearchDomainOption = DhcpSearchDomainOption.DhcpSearchDomainOption;
import * as DrgAttachmentIdDrgRouteDistributionMatchCriteria from "./drg-attachment-id-drg-route-distribution-match-criteria";
export import DrgAttachmentIdDrgRouteDistributionMatchCriteria = DrgAttachmentIdDrgRouteDistributionMatchCriteria.DrgAttachmentIdDrgRouteDistributionMatchCriteria;
import * as DrgAttachmentTypeDrgRouteDistributionMatchCriteria from "./drg-attachment-type-drg-route-distribution-match-criteria";
export import DrgAttachmentTypeDrgRouteDistributionMatchCriteria = DrgAttachmentTypeDrgRouteDistributionMatchCriteria.DrgAttachmentTypeDrgRouteDistributionMatchCriteria;
import * as DrgRoutingConfiguration from "./drg-routing-configuration";
export import DrgRoutingConfiguration = DrgRoutingConfiguration.DrgRoutingConfiguration;
import * as EgressSecurityListConfiguration from "./egress-security-list-configuration";
export import EgressSecurityListConfiguration = EgressSecurityListConfiguration.EgressSecurityListConfiguration;
import * as ForwardedRoutingAction from "./forwarded-routing-action";
export import ForwardedRoutingAction = ForwardedRoutingAction.ForwardedRoutingAction;
import * as IcmpProtocolParameters from "./icmp-protocol-parameters";
export import IcmpProtocolParameters = IcmpProtocolParameters.IcmpProtocolParameters;
import * as IcmpTrafficProtocolParameters from "./icmp-traffic-protocol-parameters";
export import IcmpTrafficProtocolParameters = IcmpTrafficProtocolParameters.IcmpTrafficProtocolParameters;
import * as IndeterminateRoutingAction from "./indeterminate-routing-action";
export import IndeterminateRoutingAction = IndeterminateRoutingAction.IndeterminateRoutingAction;
import * as IngressSecurityListConfiguration from "./ingress-security-list-configuration";
export import IngressSecurityListConfiguration = IngressSecurityListConfiguration.IngressSecurityListConfiguration;
import * as IpAddressEndpoint from "./ip-address-endpoint";
export import IpAddressEndpoint = IpAddressEndpoint.IpAddressEndpoint;
import * as IpsecTunnelDrgAttachmentNetworkDetails from "./ipsec-tunnel-drg-attachment-network-details";
export import IpsecTunnelDrgAttachmentNetworkDetails = IpsecTunnelDrgAttachmentNetworkDetails.IpsecTunnelDrgAttachmentNetworkDetails;
import * as LoadBalancerEndpoint from "./load-balancer-endpoint";
export import LoadBalancerEndpoint = LoadBalancerEndpoint.LoadBalancerEndpoint;
import * as LoadBalancerListenerEndpoint from "./load-balancer-listener-endpoint";
export import LoadBalancerListenerEndpoint = LoadBalancerListenerEndpoint.LoadBalancerListenerEndpoint;
import * as NetworkLoadBalancerEndpoint from "./network-load-balancer-endpoint";
export import NetworkLoadBalancerEndpoint = NetworkLoadBalancerEndpoint.NetworkLoadBalancerEndpoint;
import * as NetworkLoadBalancerListenerEndpoint from "./network-load-balancer-listener-endpoint";
export import NetworkLoadBalancerListenerEndpoint = NetworkLoadBalancerListenerEndpoint.NetworkLoadBalancerListenerEndpoint;
import * as NetworkingTopology from "./networking-topology";
export import NetworkingTopology = NetworkingTopology.NetworkingTopology;
import * as NoRouteRoutingAction from "./no-route-routing-action";
export import NoRouteRoutingAction = NoRouteRoutingAction.NoRouteRoutingAction;
import * as NsgConfiguration from "./nsg-configuration";
export import NsgConfiguration = NsgConfiguration.NsgConfiguration;
import * as PathAnalysisWorkRequestResult from "./path-analysis-work-request-result";
export import PathAnalysisWorkRequestResult = PathAnalysisWorkRequestResult.PathAnalysisWorkRequestResult;
import * as PathTopology from "./path-topology";
export import PathTopology = PathTopology.PathTopology;
import * as PersistedGetPathAnalysisDetails from "./persisted-get-path-analysis-details";
export import PersistedGetPathAnalysisDetails = PersistedGetPathAnalysisDetails.PersistedGetPathAnalysisDetails;
import * as RemotePeeringConnectionDrgAttachmentNetworkDetails from "./remote-peering-connection-drg-attachment-network-details";
export import RemotePeeringConnectionDrgAttachmentNetworkDetails = RemotePeeringConnectionDrgAttachmentNetworkDetails.RemotePeeringConnectionDrgAttachmentNetworkDetails;
import * as StatefulEgressSecurityListConfiguration from "./stateful-egress-security-list-configuration";
export import StatefulEgressSecurityListConfiguration = StatefulEgressSecurityListConfiguration.StatefulEgressSecurityListConfiguration;
import * as StatefulIngressSecurityListConfiguration from "./stateful-ingress-security-list-configuration";
export import StatefulIngressSecurityListConfiguration = StatefulIngressSecurityListConfiguration.StatefulIngressSecurityListConfiguration;
import * as StatefulNsgConfiguration from "./stateful-nsg-configuration";
export import StatefulNsgConfiguration = StatefulNsgConfiguration.StatefulNsgConfiguration;
import * as SubnetEndpoint from "./subnet-endpoint";
export import SubnetEndpoint = SubnetEndpoint.SubnetEndpoint;
import * as SubnetTopology from "./subnet-topology";
export import SubnetTopology = SubnetTopology.SubnetTopology;
import * as TcpProtocolParameters from "./tcp-protocol-parameters";
export import TcpProtocolParameters = TcpProtocolParameters.TcpProtocolParameters;
import * as TcpTrafficProtocolParameters from "./tcp-traffic-protocol-parameters";
export import TcpTrafficProtocolParameters = TcpTrafficProtocolParameters.TcpTrafficProtocolParameters;
import * as TopologyAssociatedWithEntityRelationship from "./topology-associated-with-entity-relationship";
export import TopologyAssociatedWithEntityRelationship = TopologyAssociatedWithEntityRelationship.TopologyAssociatedWithEntityRelationship;
import * as TopologyContainsEntityRelationship from "./topology-contains-entity-relationship";
export import TopologyContainsEntityRelationship = TopologyContainsEntityRelationship.TopologyContainsEntityRelationship;
import * as TopologyRoutesToEntityRelationship from "./topology-routes-to-entity-relationship";
export import TopologyRoutesToEntityRelationship = TopologyRoutesToEntityRelationship.TopologyRoutesToEntityRelationship;
import * as UdpProtocolParameters from "./udp-protocol-parameters";
export import UdpProtocolParameters = UdpProtocolParameters.UdpProtocolParameters;
import * as UdpTrafficProtocolParameters from "./udp-traffic-protocol-parameters";
export import UdpTrafficProtocolParameters = UdpTrafficProtocolParameters.UdpTrafficProtocolParameters;
import * as VcnDrgAttachmentNetworkCreateDetails from "./vcn-drg-attachment-network-create-details";
export import VcnDrgAttachmentNetworkCreateDetails = VcnDrgAttachmentNetworkCreateDetails.VcnDrgAttachmentNetworkCreateDetails;
import * as VcnDrgAttachmentNetworkDetails from "./vcn-drg-attachment-network-details";
export import VcnDrgAttachmentNetworkDetails = VcnDrgAttachmentNetworkDetails.VcnDrgAttachmentNetworkDetails;
import * as VcnDrgAttachmentNetworkUpdateDetails from "./vcn-drg-attachment-network-update-details";
export import VcnDrgAttachmentNetworkUpdateDetails = VcnDrgAttachmentNetworkUpdateDetails.VcnDrgAttachmentNetworkUpdateDetails;
import * as VcnRoutingConfiguration from "./vcn-routing-configuration";
export import VcnRoutingConfiguration = VcnRoutingConfiguration.VcnRoutingConfiguration;
import * as VcnTopology from "./vcn-topology";
export import VcnTopology = VcnTopology.VcnTopology;
import * as VirtualCircuitDrgAttachmentNetworkDetails from "./virtual-circuit-drg-attachment-network-details";
export import VirtualCircuitDrgAttachmentNetworkDetails = VirtualCircuitDrgAttachmentNetworkDetails.VirtualCircuitDrgAttachmentNetworkDetails;
import * as VisibleTrafficNode from "./visible-traffic-node";
export import VisibleTrafficNode = VisibleTrafficNode.VisibleTrafficNode;
import * as VlanEndpoint from "./vlan-endpoint";
export import VlanEndpoint = VlanEndpoint.VlanEndpoint;
import * as VnicEndpoint from "./vnic-endpoint";
export import VnicEndpoint = VnicEndpoint.VnicEndpoint;
