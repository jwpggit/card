/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm). This REST API is SCIM compliant.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * User's Capabilities
 */
export interface ExtensionCapabilitiesUser {
    /**
     * Indicates weather a user can use api keys
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseApiKeys"?: boolean;
    /**
     * Indicates weather a user can use auth tokens
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseAuthTokens"?: boolean;
    /**
     * Indicates weather a user can use console password
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseConsolePassword"?: boolean;
    /**
     * Indicates weather a user can use customer secret keys
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseCustomerSecretKeys"?: boolean;
    /**
     * Indicates weather a user can use oauth2 client credentials
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseOAuth2ClientCredentials"?: boolean;
    /**
     * Indicates weather a user can use smtp credentials
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseSmtpCredentials"?: boolean;
    /**
     * Indicates weather a user can use db credentials
     * <p>
     **Added In:** 2012271618
     * <p>
     **SCIM++ Properties:**
     *  - caseExact: false
     *  - idcsSearchable: false
     *  - multiValued: false
     *  - mutability: readWrite
     *  - required: false
     *  - returned: default
     *  - type: boolean
     *  - uniqueness: none
     */
    "canUseDbCredentials"?: boolean;
}
export declare namespace ExtensionCapabilitiesUser {
    function getJsonObj(obj: ExtensionCapabilitiesUser): object;
    function getDeserializedJsonObj(obj: ExtensionCapabilitiesUser): object;
}
