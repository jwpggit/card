/**
 * Identity Domains API
 * Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)](https://docs.oracle.com/iaas/Content/Identity/home.htm). This REST API is SCIM compliant.
Use the table of contents and search tool to explore the Identity Domains API.
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
export declare enum IdentityDomainsApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class IdentityDomainsClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpOptions: any;
    targetService: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Add a user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateApiKeyRequest
     * @return CreateApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateApiKey.ts.html |here} to see how to use CreateApiKey API.
     */
    createApiKey(createApiKeyRequest: requests.CreateApiKeyRequest): Promise<responses.CreateApiKeyResponse>;
    /**
     * Add a user's auth token
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateAuthTokenRequest
     * @return CreateAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateAuthToken.ts.html |here} to see how to use CreateAuthToken API.
     */
    createAuthToken(createAuthTokenRequest: requests.CreateAuthTokenRequest): Promise<responses.CreateAuthTokenResponse>;
    /**
     * Remove All Authentication Factor Channels for a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateAuthenticationFactorsRemoverRequest
     * @return CreateAuthenticationFactorsRemoverResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateAuthenticationFactorsRemover.ts.html |here} to see how to use CreateAuthenticationFactorsRemover API.
     */
    createAuthenticationFactorsRemover(createAuthenticationFactorsRemoverRequest: requests.CreateAuthenticationFactorsRemoverRequest): Promise<responses.CreateAuthenticationFactorsRemoverResponse>;
    /**
     * Add a user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCustomerSecretKeyRequest
     * @return CreateCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateCustomerSecretKey.ts.html |here} to see how to use CreateCustomerSecretKey API.
     */
    createCustomerSecretKey(createCustomerSecretKeyRequest: requests.CreateCustomerSecretKeyRequest): Promise<responses.CreateCustomerSecretKeyResponse>;
    /**
     * Create a DynamicResourceGroup
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateDynamicResourceGroupRequest
     * @return CreateDynamicResourceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateDynamicResourceGroup.ts.html |here} to see how to use CreateDynamicResourceGroup API.
     */
    createDynamicResourceGroup(createDynamicResourceGroupRequest: requests.CreateDynamicResourceGroupRequest): Promise<responses.CreateDynamicResourceGroupResponse>;
    /**
     * Create a Group
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateGroupRequest
     * @return CreateGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateGroup.ts.html |here} to see how to use CreateGroup API.
     */
    createGroup(createGroupRequest: requests.CreateGroupRequest): Promise<responses.CreateGroupResponse>;
    /**
     * Create an Identity Provider
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateIdentityProviderRequest
     * @return CreateIdentityProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateIdentityProvider.ts.html |here} to see how to use CreateIdentityProvider API.
     */
    createIdentityProvider(createIdentityProviderRequest: requests.CreateIdentityProviderRequest): Promise<responses.CreateIdentityProviderResponse>;
    /**
     * Self Register
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMeRequest
     * @return CreateMeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMe.ts.html |here} to see how to use CreateMe API.
     */
    createMe(createMeRequest: requests.CreateMeRequest): Promise<responses.CreateMeResponse>;
    /**
     * Add a user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyApiKeyRequest
     * @return CreateMyApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyApiKey.ts.html |here} to see how to use CreateMyApiKey API.
     */
    createMyApiKey(createMyApiKeyRequest: requests.CreateMyApiKeyRequest): Promise<responses.CreateMyApiKeyResponse>;
    /**
     * Add user's auth token
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyAuthTokenRequest
     * @return CreateMyAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyAuthToken.ts.html |here} to see how to use CreateMyAuthToken API.
     */
    createMyAuthToken(createMyAuthTokenRequest: requests.CreateMyAuthTokenRequest): Promise<responses.CreateMyAuthTokenResponse>;
    /**
     * Initiate Self Service Enrollment using the Requested MFA Factor
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyAuthenticationFactorInitiatorRequest
     * @return CreateMyAuthenticationFactorInitiatorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyAuthenticationFactorInitiator.ts.html |here} to see how to use CreateMyAuthenticationFactorInitiator API.
     */
    createMyAuthenticationFactorInitiator(createMyAuthenticationFactorInitiatorRequest: requests.CreateMyAuthenticationFactorInitiatorRequest): Promise<responses.CreateMyAuthenticationFactorInitiatorResponse>;
    /**
     * Validate Self Service Enrollment using the Requested MFA Factor
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyAuthenticationFactorValidatorRequest
     * @return CreateMyAuthenticationFactorValidatorResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyAuthenticationFactorValidator.ts.html |here} to see how to use CreateMyAuthenticationFactorValidator API.
     */
    createMyAuthenticationFactorValidator(createMyAuthenticationFactorValidatorRequest: requests.CreateMyAuthenticationFactorValidatorRequest): Promise<responses.CreateMyAuthenticationFactorValidatorResponse>;
    /**
     * Remove All Authentication Factor Channels for a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyAuthenticationFactorsRemoverRequest
     * @return CreateMyAuthenticationFactorsRemoverResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyAuthenticationFactorsRemover.ts.html |here} to see how to use CreateMyAuthenticationFactorsRemover API.
     */
    createMyAuthenticationFactorsRemover(createMyAuthenticationFactorsRemoverRequest: requests.CreateMyAuthenticationFactorsRemoverRequest): Promise<responses.CreateMyAuthenticationFactorsRemoverResponse>;
    /**
     * Add a user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyCustomerSecretKeyRequest
     * @return CreateMyCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyCustomerSecretKey.ts.html |here} to see how to use CreateMyCustomerSecretKey API.
     */
    createMyCustomerSecretKey(createMyCustomerSecretKeyRequest: requests.CreateMyCustomerSecretKeyRequest): Promise<responses.CreateMyCustomerSecretKeyResponse>;
    /**
     * Add a user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyOAuth2ClientCredentialRequest
     * @return CreateMyOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyOAuth2ClientCredential.ts.html |here} to see how to use CreateMyOAuth2ClientCredential API.
     */
    createMyOAuth2ClientCredential(createMyOAuth2ClientCredentialRequest: requests.CreateMyOAuth2ClientCredentialRequest): Promise<responses.CreateMyOAuth2ClientCredentialResponse>;
    /**
     * Add a user's smtp credenials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMySmtpCredentialRequest
     * @return CreateMySmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMySmtpCredential.ts.html |here} to see how to use CreateMySmtpCredential API.
     */
    createMySmtpCredential(createMySmtpCredentialRequest: requests.CreateMySmtpCredentialRequest): Promise<responses.CreateMySmtpCredentialResponse>;
    /**
     * Create a Support Account
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMySupportAccountRequest
     * @return CreateMySupportAccountResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMySupportAccount.ts.html |here} to see how to use CreateMySupportAccount API.
     */
    createMySupportAccount(createMySupportAccountRequest: requests.CreateMySupportAccountRequest): Promise<responses.CreateMySupportAccountResponse>;
    /**
     * Set a User's DbCredential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateMyUserDbCredentialRequest
     * @return CreateMyUserDbCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateMyUserDbCredential.ts.html |here} to see how to use CreateMyUserDbCredential API.
     */
    createMyUserDbCredential(createMyUserDbCredentialRequest: requests.CreateMyUserDbCredentialRequest): Promise<responses.CreateMyUserDbCredentialResponse>;
    /**
     * Add a user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateOAuth2ClientCredentialRequest
     * @return CreateOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateOAuth2ClientCredential.ts.html |here} to see how to use CreateOAuth2ClientCredential API.
     */
    createOAuth2ClientCredential(createOAuth2ClientCredentialRequest: requests.CreateOAuth2ClientCredentialRequest): Promise<responses.CreateOAuth2ClientCredentialResponse>;
    /**
     * Create a Password Policy
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreatePasswordPolicyRequest
     * @return CreatePasswordPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreatePasswordPolicy.ts.html |here} to see how to use CreatePasswordPolicy API.
     */
    createPasswordPolicy(createPasswordPolicyRequest: requests.CreatePasswordPolicyRequest): Promise<responses.CreatePasswordPolicyResponse>;
    /**
     * Add a user's smtp credenials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateSmtpCredentialRequest
     * @return CreateSmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateSmtpCredential.ts.html |here} to see how to use CreateSmtpCredential API.
     */
    createSmtpCredential(createSmtpCredentialRequest: requests.CreateSmtpCredentialRequest): Promise<responses.CreateSmtpCredentialResponse>;
    /**
     * Create a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateUserRequest
     * @return CreateUserResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateUser.ts.html |here} to see how to use CreateUser API.
     */
    createUser(createUserRequest: requests.CreateUserRequest): Promise<responses.CreateUserResponse>;
    /**
     * Set a User's DbCredential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateUserDbCredentialRequest
     * @return CreateUserDbCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/CreateUserDbCredential.ts.html |here} to see how to use CreateUserDbCredential API.
     */
    createUserDbCredential(createUserDbCredentialRequest: requests.CreateUserDbCredentialRequest): Promise<responses.CreateUserDbCredentialResponse>;
    /**
     * Delete user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteApiKeyRequest
     * @return DeleteApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteApiKey.ts.html |here} to see how to use DeleteApiKey API.
     */
    deleteApiKey(deleteApiKeyRequest: requests.DeleteApiKeyRequest): Promise<responses.DeleteApiKeyResponse>;
    /**
     * Delete user's auth token
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteAuthTokenRequest
     * @return DeleteAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteAuthToken.ts.html |here} to see how to use DeleteAuthToken API.
     */
    deleteAuthToken(deleteAuthTokenRequest: requests.DeleteAuthTokenRequest): Promise<responses.DeleteAuthTokenResponse>;
    /**
     * Delete user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCustomerSecretKeyRequest
     * @return DeleteCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteCustomerSecretKey.ts.html |here} to see how to use DeleteCustomerSecretKey API.
     */
    deleteCustomerSecretKey(deleteCustomerSecretKeyRequest: requests.DeleteCustomerSecretKeyRequest): Promise<responses.DeleteCustomerSecretKeyResponse>;
    /**
     * Delete a DynamicResourceGroup
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteDynamicResourceGroupRequest
     * @return DeleteDynamicResourceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteDynamicResourceGroup.ts.html |here} to see how to use DeleteDynamicResourceGroup API.
     */
    deleteDynamicResourceGroup(deleteDynamicResourceGroupRequest: requests.DeleteDynamicResourceGroupRequest): Promise<responses.DeleteDynamicResourceGroupResponse>;
    /**
     * Delete a Group
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteGroupRequest
     * @return DeleteGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteGroup.ts.html |here} to see how to use DeleteGroup API.
     */
    deleteGroup(deleteGroupRequest: requests.DeleteGroupRequest): Promise<responses.DeleteGroupResponse>;
    /**
     * Delete an Identity Provider
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteIdentityProviderRequest
     * @return DeleteIdentityProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteIdentityProvider.ts.html |here} to see how to use DeleteIdentityProvider API.
     */
    deleteIdentityProvider(deleteIdentityProviderRequest: requests.DeleteIdentityProviderRequest): Promise<responses.DeleteIdentityProviderResponse>;
    /**
     * Delete user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyApiKeyRequest
     * @return DeleteMyApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyApiKey.ts.html |here} to see how to use DeleteMyApiKey API.
     */
    deleteMyApiKey(deleteMyApiKeyRequest: requests.DeleteMyApiKeyRequest): Promise<responses.DeleteMyApiKeyResponse>;
    /**
     * Delete user's auth token
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyAuthTokenRequest
     * @return DeleteMyAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyAuthToken.ts.html |here} to see how to use DeleteMyAuthToken API.
     */
    deleteMyAuthToken(deleteMyAuthTokenRequest: requests.DeleteMyAuthTokenRequest): Promise<responses.DeleteMyAuthTokenResponse>;
    /**
     * Delete user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyCustomerSecretKeyRequest
     * @return DeleteMyCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyCustomerSecretKey.ts.html |here} to see how to use DeleteMyCustomerSecretKey API.
     */
    deleteMyCustomerSecretKey(deleteMyCustomerSecretKeyRequest: requests.DeleteMyCustomerSecretKeyRequest): Promise<responses.DeleteMyCustomerSecretKeyResponse>;
    /**
     * Delete a Device
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyDeviceRequest
     * @return DeleteMyDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyDevice.ts.html |here} to see how to use DeleteMyDevice API.
     */
    deleteMyDevice(deleteMyDeviceRequest: requests.DeleteMyDeviceRequest): Promise<responses.DeleteMyDeviceResponse>;
    /**
     * Delete user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyOAuth2ClientCredentialRequest
     * @return DeleteMyOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyOAuth2ClientCredential.ts.html |here} to see how to use DeleteMyOAuth2ClientCredential API.
     */
    deleteMyOAuth2ClientCredential(deleteMyOAuth2ClientCredentialRequest: requests.DeleteMyOAuth2ClientCredentialRequest): Promise<responses.DeleteMyOAuth2ClientCredentialResponse>;
    /**
     * Delete user's smtp credenials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMySmtpCredentialRequest
     * @return DeleteMySmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMySmtpCredential.ts.html |here} to see how to use DeleteMySmtpCredential API.
     */
    deleteMySmtpCredential(deleteMySmtpCredentialRequest: requests.DeleteMySmtpCredentialRequest): Promise<responses.DeleteMySmtpCredentialResponse>;
    /**
     * Delete a Support Account
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMySupportAccountRequest
     * @return DeleteMySupportAccountResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMySupportAccount.ts.html |here} to see how to use DeleteMySupportAccount API.
     */
    deleteMySupportAccount(deleteMySupportAccountRequest: requests.DeleteMySupportAccountRequest): Promise<responses.DeleteMySupportAccountResponse>;
    /**
     * Delete a Trusted User Agent
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyTrustedUserAgentRequest
     * @return DeleteMyTrustedUserAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyTrustedUserAgent.ts.html |here} to see how to use DeleteMyTrustedUserAgent API.
     */
    deleteMyTrustedUserAgent(deleteMyTrustedUserAgentRequest: requests.DeleteMyTrustedUserAgentRequest): Promise<responses.DeleteMyTrustedUserAgentResponse>;
    /**
     * Remove a User's DbCredential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteMyUserDbCredentialRequest
     * @return DeleteMyUserDbCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteMyUserDbCredential.ts.html |here} to see how to use DeleteMyUserDbCredential API.
     */
    deleteMyUserDbCredential(deleteMyUserDbCredentialRequest: requests.DeleteMyUserDbCredentialRequest): Promise<responses.DeleteMyUserDbCredentialResponse>;
    /**
     * Delete user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteOAuth2ClientCredentialRequest
     * @return DeleteOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteOAuth2ClientCredential.ts.html |here} to see how to use DeleteOAuth2ClientCredential API.
     */
    deleteOAuth2ClientCredential(deleteOAuth2ClientCredentialRequest: requests.DeleteOAuth2ClientCredentialRequest): Promise<responses.DeleteOAuth2ClientCredentialResponse>;
    /**
     * Delete a Password Policy
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeletePasswordPolicyRequest
     * @return DeletePasswordPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeletePasswordPolicy.ts.html |here} to see how to use DeletePasswordPolicy API.
     */
    deletePasswordPolicy(deletePasswordPolicyRequest: requests.DeletePasswordPolicyRequest): Promise<responses.DeletePasswordPolicyResponse>;
    /**
     * Delete user's smtp credenials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteSmtpCredentialRequest
     * @return DeleteSmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteSmtpCredential.ts.html |here} to see how to use DeleteSmtpCredential API.
     */
    deleteSmtpCredential(deleteSmtpCredentialRequest: requests.DeleteSmtpCredentialRequest): Promise<responses.DeleteSmtpCredentialResponse>;
    /**
     * Delete a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteUserRequest
     * @return DeleteUserResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteUser.ts.html |here} to see how to use DeleteUser API.
     */
    deleteUser(deleteUserRequest: requests.DeleteUserRequest): Promise<responses.DeleteUserResponse>;
    /**
     * Remove a User's DbCredential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteUserDbCredentialRequest
     * @return DeleteUserDbCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/DeleteUserDbCredential.ts.html |here} to see how to use DeleteUserDbCredential API.
     */
    deleteUserDbCredential(deleteUserDbCredentialRequest: requests.DeleteUserDbCredentialRequest): Promise<responses.DeleteUserDbCredentialResponse>;
    /**
     * Get user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetApiKeyRequest
     * @return GetApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetApiKey.ts.html |here} to see how to use GetApiKey API.
     */
    getApiKey(getApiKeyRequest: requests.GetApiKeyRequest): Promise<responses.GetApiKeyResponse>;
    /**
     * Get user's auth token
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAuthTokenRequest
     * @return GetAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetAuthToken.ts.html |here} to see how to use GetAuthToken API.
     */
    getAuthToken(getAuthTokenRequest: requests.GetAuthTokenRequest): Promise<responses.GetAuthTokenResponse>;
    /**
     * Get Authentication Factor Settings
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAuthenticationFactorSettingRequest
     * @return GetAuthenticationFactorSettingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetAuthenticationFactorSetting.ts.html |here} to see how to use GetAuthenticationFactorSetting API.
     */
    getAuthenticationFactorSetting(getAuthenticationFactorSettingRequest: requests.GetAuthenticationFactorSettingRequest): Promise<responses.GetAuthenticationFactorSettingResponse>;
    /**
     * Get user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCustomerSecretKeyRequest
     * @return GetCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetCustomerSecretKey.ts.html |here} to see how to use GetCustomerSecretKey API.
     */
    getCustomerSecretKey(getCustomerSecretKeyRequest: requests.GetCustomerSecretKeyRequest): Promise<responses.GetCustomerSecretKeyResponse>;
    /**
     * Get a DynamicResourceGroup
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetDynamicResourceGroupRequest
     * @return GetDynamicResourceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetDynamicResourceGroup.ts.html |here} to see how to use GetDynamicResourceGroup API.
     */
    getDynamicResourceGroup(getDynamicResourceGroupRequest: requests.GetDynamicResourceGroupRequest): Promise<responses.GetDynamicResourceGroupResponse>;
    /**
     * Get a Group - The Group search and get operations on users/members will throw an exception if it has more than 10K members, to avoid the exception use the pagination filter to get or search group members
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetGroupRequest
     * @return GetGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetGroup.ts.html |here} to see how to use GetGroup API.
     */
    getGroup(getGroupRequest: requests.GetGroupRequest): Promise<responses.GetGroupResponse>;
    /**
     * Get an Identity Provider
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetIdentityProviderRequest
     * @return GetIdentityProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetIdentityProvider.ts.html |here} to see how to use GetIdentityProvider API.
     */
    getIdentityProvider(getIdentityProviderRequest: requests.GetIdentityProviderRequest): Promise<responses.GetIdentityProviderResponse>;
    /**
     * Get KmsiSettings
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetKmsiSettingRequest
     * @return GetKmsiSettingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetKmsiSetting.ts.html |here} to see how to use GetKmsiSetting API.
     */
    getKmsiSetting(getKmsiSettingRequest: requests.GetKmsiSettingRequest): Promise<responses.GetKmsiSettingResponse>;
    /**
     * Get User Info
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMeRequest
     * @return GetMeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMe.ts.html |here} to see how to use GetMe API.
     */
    getMe(getMeRequest: requests.GetMeRequest): Promise<responses.GetMeResponse>;
    /**
     * Get user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyApiKeyRequest
     * @return GetMyApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyApiKey.ts.html |here} to see how to use GetMyApiKey API.
     */
    getMyApiKey(getMyApiKeyRequest: requests.GetMyApiKeyRequest): Promise<responses.GetMyApiKeyResponse>;
    /**
     * Get user's auth token
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyAuthTokenRequest
     * @return GetMyAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyAuthToken.ts.html |here} to see how to use GetMyAuthToken API.
     */
    getMyAuthToken(getMyAuthTokenRequest: requests.GetMyAuthTokenRequest): Promise<responses.GetMyAuthTokenResponse>;
    /**
     * Get user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyCustomerSecretKeyRequest
     * @return GetMyCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyCustomerSecretKey.ts.html |here} to see how to use GetMyCustomerSecretKey API.
     */
    getMyCustomerSecretKey(getMyCustomerSecretKeyRequest: requests.GetMyCustomerSecretKeyRequest): Promise<responses.GetMyCustomerSecretKeyResponse>;
    /**
     * Get a Device
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyDeviceRequest
     * @return GetMyDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyDevice.ts.html |here} to see how to use GetMyDevice API.
     */
    getMyDevice(getMyDeviceRequest: requests.GetMyDeviceRequest): Promise<responses.GetMyDeviceResponse>;
    /**
     * Get user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyOAuth2ClientCredentialRequest
     * @return GetMyOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyOAuth2ClientCredential.ts.html |here} to see how to use GetMyOAuth2ClientCredential API.
     */
    getMyOAuth2ClientCredential(getMyOAuth2ClientCredentialRequest: requests.GetMyOAuth2ClientCredentialRequest): Promise<responses.GetMyOAuth2ClientCredentialResponse>;
    /**
     * Get user's smtp credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMySmtpCredentialRequest
     * @return GetMySmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMySmtpCredential.ts.html |here} to see how to use GetMySmtpCredential API.
     */
    getMySmtpCredential(getMySmtpCredentialRequest: requests.GetMySmtpCredentialRequest): Promise<responses.GetMySmtpCredentialResponse>;
    /**
     * Get a Support Account
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMySupportAccountRequest
     * @return GetMySupportAccountResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMySupportAccount.ts.html |here} to see how to use GetMySupportAccount API.
     */
    getMySupportAccount(getMySupportAccountRequest: requests.GetMySupportAccountRequest): Promise<responses.GetMySupportAccountResponse>;
    /**
     * Get a Trusted User Agent
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyTrustedUserAgentRequest
     * @return GetMyTrustedUserAgentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyTrustedUserAgent.ts.html |here} to see how to use GetMyTrustedUserAgent API.
     */
    getMyTrustedUserAgent(getMyTrustedUserAgentRequest: requests.GetMyTrustedUserAgentRequest): Promise<responses.GetMyTrustedUserAgentResponse>;
    /**
     * Get a User's DbCredentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetMyUserDbCredentialRequest
     * @return GetMyUserDbCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetMyUserDbCredential.ts.html |here} to see how to use GetMyUserDbCredential API.
     */
    getMyUserDbCredential(getMyUserDbCredentialRequest: requests.GetMyUserDbCredentialRequest): Promise<responses.GetMyUserDbCredentialResponse>;
    /**
     * Get user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetOAuth2ClientCredentialRequest
     * @return GetOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetOAuth2ClientCredential.ts.html |here} to see how to use GetOAuth2ClientCredential API.
     */
    getOAuth2ClientCredential(getOAuth2ClientCredentialRequest: requests.GetOAuth2ClientCredentialRequest): Promise<responses.GetOAuth2ClientCredentialResponse>;
    /**
     * Get a Password Policy
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetPasswordPolicyRequest
     * @return GetPasswordPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetPasswordPolicy.ts.html |here} to see how to use GetPasswordPolicy API.
     */
    getPasswordPolicy(getPasswordPolicyRequest: requests.GetPasswordPolicyRequest): Promise<responses.GetPasswordPolicyResponse>;
    /**
     * Get user's smtp credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetSmtpCredentialRequest
     * @return GetSmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetSmtpCredential.ts.html |here} to see how to use GetSmtpCredential API.
     */
    getSmtpCredential(getSmtpCredentialRequest: requests.GetSmtpCredentialRequest): Promise<responses.GetSmtpCredentialResponse>;
    /**
     * Get a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetUserRequest
     * @return GetUserResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetUser.ts.html |here} to see how to use GetUser API.
     */
    getUser(getUserRequest: requests.GetUserRequest): Promise<responses.GetUserResponse>;
    /**
     * Get a User's DbCredentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetUserDbCredentialRequest
     * @return GetUserDbCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/GetUserDbCredential.ts.html |here} to see how to use GetUserDbCredential API.
     */
    getUserDbCredential(getUserDbCredentialRequest: requests.GetUserDbCredentialRequest): Promise<responses.GetUserDbCredentialResponse>;
    /**
     * Search Api Key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListApiKeysRequest
     * @return ListApiKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListApiKeys.ts.html |here} to see how to use ListApiKeys API.
     */
    listApiKeys(listApiKeysRequest: requests.ListApiKeysRequest): Promise<responses.ListApiKeysResponse>;
    /**
     * Search AuthTokens
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAuthTokensRequest
     * @return ListAuthTokensResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListAuthTokens.ts.html |here} to see how to use ListAuthTokens API.
     */
    listAuthTokens(listAuthTokensRequest: requests.ListAuthTokensRequest): Promise<responses.ListAuthTokensResponse>;
    /**
     * Search Authentication Factor Settings
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAuthenticationFactorSettingsRequest
     * @return ListAuthenticationFactorSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListAuthenticationFactorSettings.ts.html |here} to see how to use ListAuthenticationFactorSettings API.
     */
    listAuthenticationFactorSettings(listAuthenticationFactorSettingsRequest: requests.ListAuthenticationFactorSettingsRequest): Promise<responses.ListAuthenticationFactorSettingsResponse>;
    /**
     * Search user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCustomerSecretKeysRequest
     * @return ListCustomerSecretKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListCustomerSecretKeys.ts.html |here} to see how to use ListCustomerSecretKeys API.
     */
    listCustomerSecretKeys(listCustomerSecretKeysRequest: requests.ListCustomerSecretKeysRequest): Promise<responses.ListCustomerSecretKeysResponse>;
    /**
     * Search DynamicResourceGroups
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListDynamicResourceGroupsRequest
     * @return ListDynamicResourceGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListDynamicResourceGroups.ts.html |here} to see how to use ListDynamicResourceGroups API.
     */
    listDynamicResourceGroups(listDynamicResourceGroupsRequest: requests.ListDynamicResourceGroupsRequest): Promise<responses.ListDynamicResourceGroupsResponse>;
    /**
     * Search Groups.The Group search and get operations on users/members will throw an exception if it has more than 10K members, to avoid the exception use the pagination filter to get or search group members
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListGroupsRequest
     * @return ListGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListGroups.ts.html |here} to see how to use ListGroups API.
     */
    listGroups(listGroupsRequest: requests.ListGroupsRequest): Promise<responses.ListGroupsResponse>;
    /**
     * Search Identity Providers
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListIdentityProvidersRequest
     * @return ListIdentityProvidersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListIdentityProviders.ts.html |here} to see how to use ListIdentityProviders API.
     */
    listIdentityProviders(listIdentityProvidersRequest: requests.ListIdentityProvidersRequest): Promise<responses.ListIdentityProvidersResponse>;
    /**
     * Search KmsiSettings
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListKmsiSettingsRequest
     * @return ListKmsiSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListKmsiSettings.ts.html |here} to see how to use ListKmsiSettings API.
     */
    listKmsiSettings(listKmsiSettingsRequest: requests.ListKmsiSettingsRequest): Promise<responses.ListKmsiSettingsResponse>;
    /**
     * Search Api Key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyApiKeysRequest
     * @return ListMyApiKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyApiKeys.ts.html |here} to see how to use ListMyApiKeys API.
     */
    listMyApiKeys(listMyApiKeysRequest: requests.ListMyApiKeysRequest): Promise<responses.ListMyApiKeysResponse>;
    /**
     * Search AuthTokens
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyAuthTokensRequest
     * @return ListMyAuthTokensResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyAuthTokens.ts.html |here} to see how to use ListMyAuthTokens API.
     */
    listMyAuthTokens(listMyAuthTokensRequest: requests.ListMyAuthTokensRequest): Promise<responses.ListMyAuthTokensResponse>;
    /**
     * Search user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyCustomerSecretKeysRequest
     * @return ListMyCustomerSecretKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyCustomerSecretKeys.ts.html |here} to see how to use ListMyCustomerSecretKeys API.
     */
    listMyCustomerSecretKeys(listMyCustomerSecretKeysRequest: requests.ListMyCustomerSecretKeysRequest): Promise<responses.ListMyCustomerSecretKeysResponse>;
    /**
     * Search Devices
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyDevicesRequest
     * @return ListMyDevicesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyDevices.ts.html |here} to see how to use ListMyDevices API.
     */
    listMyDevices(listMyDevicesRequest: requests.ListMyDevicesRequest): Promise<responses.ListMyDevicesResponse>;
    /**
     * Search My Groups
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyGroupsRequest
     * @return ListMyGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyGroups.ts.html |here} to see how to use ListMyGroups API.
     */
    listMyGroups(listMyGroupsRequest: requests.ListMyGroupsRequest): Promise<responses.ListMyGroupsResponse>;
    /**
     * Search oauth2 client credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyOAuth2ClientCredentialsRequest
     * @return ListMyOAuth2ClientCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyOAuth2ClientCredentials.ts.html |here} to see how to use ListMyOAuth2ClientCredentials API.
     */
    listMyOAuth2ClientCredentials(listMyOAuth2ClientCredentialsRequest: requests.ListMyOAuth2ClientCredentialsRequest): Promise<responses.ListMyOAuth2ClientCredentialsResponse>;
    /**
     * Search smtp credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMySmtpCredentialsRequest
     * @return ListMySmtpCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMySmtpCredentials.ts.html |here} to see how to use ListMySmtpCredentials API.
     */
    listMySmtpCredentials(listMySmtpCredentialsRequest: requests.ListMySmtpCredentialsRequest): Promise<responses.ListMySmtpCredentialsResponse>;
    /**
     * Search Support Accounts
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMySupportAccountsRequest
     * @return ListMySupportAccountsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMySupportAccounts.ts.html |here} to see how to use ListMySupportAccounts API.
     */
    listMySupportAccounts(listMySupportAccountsRequest: requests.ListMySupportAccountsRequest): Promise<responses.ListMySupportAccountsResponse>;
    /**
     * Search Trusted User Agents
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyTrustedUserAgentsRequest
     * @return ListMyTrustedUserAgentsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyTrustedUserAgents.ts.html |here} to see how to use ListMyTrustedUserAgents API.
     */
    listMyTrustedUserAgents(listMyTrustedUserAgentsRequest: requests.ListMyTrustedUserAgentsRequest): Promise<responses.ListMyTrustedUserAgentsResponse>;
    /**
     * Search a User's DBCredentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListMyUserDbCredentialsRequest
     * @return ListMyUserDbCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListMyUserDbCredentials.ts.html |here} to see how to use ListMyUserDbCredentials API.
     */
    listMyUserDbCredentials(listMyUserDbCredentialsRequest: requests.ListMyUserDbCredentialsRequest): Promise<responses.ListMyUserDbCredentialsResponse>;
    /**
     * Search oauth2 client credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListOAuth2ClientCredentialsRequest
     * @return ListOAuth2ClientCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListOAuth2ClientCredentials.ts.html |here} to see how to use ListOAuth2ClientCredentials API.
     */
    listOAuth2ClientCredentials(listOAuth2ClientCredentialsRequest: requests.ListOAuth2ClientCredentialsRequest): Promise<responses.ListOAuth2ClientCredentialsResponse>;
    /**
     * Search Password Policies
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListPasswordPoliciesRequest
     * @return ListPasswordPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListPasswordPolicies.ts.html |here} to see how to use ListPasswordPolicies API.
     */
    listPasswordPolicies(listPasswordPoliciesRequest: requests.ListPasswordPoliciesRequest): Promise<responses.ListPasswordPoliciesResponse>;
    /**
     * Search smtp credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSmtpCredentialsRequest
     * @return ListSmtpCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListSmtpCredentials.ts.html |here} to see how to use ListSmtpCredentials API.
     */
    listSmtpCredentials(listSmtpCredentialsRequest: requests.ListSmtpCredentialsRequest): Promise<responses.ListSmtpCredentialsResponse>;
    /**
     * Search a User's DBCredentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListUserDbCredentialsRequest
     * @return ListUserDbCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListUserDbCredentials.ts.html |here} to see how to use ListUserDbCredentials API.
     */
    listUserDbCredentials(listUserDbCredentialsRequest: requests.ListUserDbCredentialsRequest): Promise<responses.ListUserDbCredentialsResponse>;
    /**
     * Search Users
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListUsersRequest
     * @return ListUsersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/ListUsers.ts.html |here} to see how to use ListUsers API.
     */
    listUsers(listUsersRequest: requests.ListUsersRequest): Promise<responses.ListUsersResponse>;
    /**
     * Update user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchApiKeyRequest
     * @return PatchApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchApiKey.ts.html |here} to see how to use PatchApiKey API.
     */
    patchApiKey(patchApiKeyRequest: requests.PatchApiKeyRequest): Promise<responses.PatchApiKeyResponse>;
    /**
     * Update user's AuthToken
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchAuthTokenRequest
     * @return PatchAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchAuthToken.ts.html |here} to see how to use PatchAuthToken API.
     */
    patchAuthToken(patchAuthTokenRequest: requests.PatchAuthTokenRequest): Promise<responses.PatchAuthTokenResponse>;
    /**
     * Update user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchCustomerSecretKeyRequest
     * @return PatchCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchCustomerSecretKey.ts.html |here} to see how to use PatchCustomerSecretKey API.
     */
    patchCustomerSecretKey(patchCustomerSecretKeyRequest: requests.PatchCustomerSecretKeyRequest): Promise<responses.PatchCustomerSecretKeyResponse>;
    /**
     * Update a DynamicResourceGroup
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchDynamicResourceGroupRequest
     * @return PatchDynamicResourceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchDynamicResourceGroup.ts.html |here} to see how to use PatchDynamicResourceGroup API.
     */
    patchDynamicResourceGroup(patchDynamicResourceGroupRequest: requests.PatchDynamicResourceGroupRequest): Promise<responses.PatchDynamicResourceGroupResponse>;
    /**
     * Update a Group
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchGroupRequest
     * @return PatchGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchGroup.ts.html |here} to see how to use PatchGroup API.
     */
    patchGroup(patchGroupRequest: requests.PatchGroupRequest): Promise<responses.PatchGroupResponse>;
    /**
     * Update an Identity Provider
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchIdentityProviderRequest
     * @return PatchIdentityProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchIdentityProvider.ts.html |here} to see how to use PatchIdentityProvider API.
     */
    patchIdentityProvider(patchIdentityProviderRequest: requests.PatchIdentityProviderRequest): Promise<responses.PatchIdentityProviderResponse>;
    /**
     * Update a Setting
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchKmsiSettingRequest
     * @return PatchKmsiSettingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchKmsiSetting.ts.html |here} to see how to use PatchKmsiSetting API.
     */
    patchKmsiSetting(patchKmsiSettingRequest: requests.PatchKmsiSettingRequest): Promise<responses.PatchKmsiSettingResponse>;
    /**
     * Update User Info
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMeRequest
     * @return PatchMeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMe.ts.html |here} to see how to use PatchMe API.
     */
    patchMe(patchMeRequest: requests.PatchMeRequest): Promise<responses.PatchMeResponse>;
    /**
     * Update user's api key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMyApiKeyRequest
     * @return PatchMyApiKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMyApiKey.ts.html |here} to see how to use PatchMyApiKey API.
     */
    patchMyApiKey(patchMyApiKeyRequest: requests.PatchMyApiKeyRequest): Promise<responses.PatchMyApiKeyResponse>;
    /**
     * Update user's AuthToken
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMyAuthTokenRequest
     * @return PatchMyAuthTokenResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMyAuthToken.ts.html |here} to see how to use PatchMyAuthToken API.
     */
    patchMyAuthToken(patchMyAuthTokenRequest: requests.PatchMyAuthTokenRequest): Promise<responses.PatchMyAuthTokenResponse>;
    /**
     * Update user's customer secret key
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMyCustomerSecretKeyRequest
     * @return PatchMyCustomerSecretKeyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMyCustomerSecretKey.ts.html |here} to see how to use PatchMyCustomerSecretKey API.
     */
    patchMyCustomerSecretKey(patchMyCustomerSecretKeyRequest: requests.PatchMyCustomerSecretKeyRequest): Promise<responses.PatchMyCustomerSecretKeyResponse>;
    /**
     * Update a Device
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMyDeviceRequest
     * @return PatchMyDeviceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMyDevice.ts.html |here} to see how to use PatchMyDevice API.
     */
    patchMyDevice(patchMyDeviceRequest: requests.PatchMyDeviceRequest): Promise<responses.PatchMyDeviceResponse>;
    /**
     * Update user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMyOAuth2ClientCredentialRequest
     * @return PatchMyOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMyOAuth2ClientCredential.ts.html |here} to see how to use PatchMyOAuth2ClientCredential API.
     */
    patchMyOAuth2ClientCredential(patchMyOAuth2ClientCredentialRequest: requests.PatchMyOAuth2ClientCredentialRequest): Promise<responses.PatchMyOAuth2ClientCredentialResponse>;
    /**
     * Update user's smtp credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchMySmtpCredentialRequest
     * @return PatchMySmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchMySmtpCredential.ts.html |here} to see how to use PatchMySmtpCredential API.
     */
    patchMySmtpCredential(patchMySmtpCredentialRequest: requests.PatchMySmtpCredentialRequest): Promise<responses.PatchMySmtpCredentialResponse>;
    /**
     * Update user's oauth2 client credential
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchOAuth2ClientCredentialRequest
     * @return PatchOAuth2ClientCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchOAuth2ClientCredential.ts.html |here} to see how to use PatchOAuth2ClientCredential API.
     */
    patchOAuth2ClientCredential(patchOAuth2ClientCredentialRequest: requests.PatchOAuth2ClientCredentialRequest): Promise<responses.PatchOAuth2ClientCredentialResponse>;
    /**
     * Update a Password Policy
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchPasswordPolicyRequest
     * @return PatchPasswordPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchPasswordPolicy.ts.html |here} to see how to use PatchPasswordPolicy API.
     */
    patchPasswordPolicy(patchPasswordPolicyRequest: requests.PatchPasswordPolicyRequest): Promise<responses.PatchPasswordPolicyResponse>;
    /**
     * Update user's smtp credentials
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchSmtpCredentialRequest
     * @return PatchSmtpCredentialResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchSmtpCredential.ts.html |here} to see how to use PatchSmtpCredential API.
     */
    patchSmtpCredential(patchSmtpCredentialRequest: requests.PatchSmtpCredentialRequest): Promise<responses.PatchSmtpCredentialResponse>;
    /**
     * Update a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PatchUserRequest
     * @return PatchUserResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PatchUser.ts.html |here} to see how to use PatchUser API.
     */
    patchUser(patchUserRequest: requests.PatchUserRequest): Promise<responses.PatchUserResponse>;
    /**
     * Replace Authentication Factor Settings
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutAuthenticationFactorSettingRequest
     * @return PutAuthenticationFactorSettingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutAuthenticationFactorSetting.ts.html |here} to see how to use PutAuthenticationFactorSetting API.
     */
    putAuthenticationFactorSetting(putAuthenticationFactorSettingRequest: requests.PutAuthenticationFactorSettingRequest): Promise<responses.PutAuthenticationFactorSettingResponse>;
    /**
     * Replace a DynamicResourceGroup
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutDynamicResourceGroupRequest
     * @return PutDynamicResourceGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutDynamicResourceGroup.ts.html |here} to see how to use PutDynamicResourceGroup API.
     */
    putDynamicResourceGroup(putDynamicResourceGroupRequest: requests.PutDynamicResourceGroupRequest): Promise<responses.PutDynamicResourceGroupResponse>;
    /**
     * Replace a Group
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutGroupRequest
     * @return PutGroupResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutGroup.ts.html |here} to see how to use PutGroup API.
     */
    putGroup(putGroupRequest: requests.PutGroupRequest): Promise<responses.PutGroupResponse>;
    /**
     * Replace an Identity Provider
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutIdentityProviderRequest
     * @return PutIdentityProviderResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutIdentityProvider.ts.html |here} to see how to use PutIdentityProvider API.
     */
    putIdentityProvider(putIdentityProviderRequest: requests.PutIdentityProviderRequest): Promise<responses.PutIdentityProviderResponse>;
    /**
     * Replace KmsiSettings
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutKmsiSettingRequest
     * @return PutKmsiSettingResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutKmsiSetting.ts.html |here} to see how to use PutKmsiSetting API.
     */
    putKmsiSetting(putKmsiSettingRequest: requests.PutKmsiSettingRequest): Promise<responses.PutKmsiSettingResponse>;
    /**
     * Replace User Info
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutMeRequest
     * @return PutMeResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutMe.ts.html |here} to see how to use PutMe API.
     */
    putMe(putMeRequest: requests.PutMeRequest): Promise<responses.PutMeResponse>;
    /**
     * Self-Service Password Update
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutMePasswordChangerRequest
     * @return PutMePasswordChangerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutMePasswordChanger.ts.html |here} to see how to use PutMePasswordChanger API.
     */
    putMePasswordChanger(putMePasswordChangerRequest: requests.PutMePasswordChangerRequest): Promise<responses.PutMePasswordChangerResponse>;
    /**
     * Replace a Password Policy
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutPasswordPolicyRequest
     * @return PutPasswordPolicyResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutPasswordPolicy.ts.html |here} to see how to use PutPasswordPolicy API.
     */
    putPasswordPolicy(putPasswordPolicyRequest: requests.PutPasswordPolicyRequest): Promise<responses.PutPasswordPolicyResponse>;
    /**
     * Replace a User
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutUserRequest
     * @return PutUserResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutUser.ts.html |here} to see how to use PutUser API.
     */
    putUser(putUserRequest: requests.PutUserRequest): Promise<responses.PutUserResponse>;
    /**
     * Change user capabilities
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutUserCapabilitiesChangerRequest
     * @return PutUserCapabilitiesChangerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutUserCapabilitiesChanger.ts.html |here} to see how to use PutUserCapabilitiesChanger API.
     */
    putUserCapabilitiesChanger(putUserCapabilitiesChangerRequest: requests.PutUserCapabilitiesChangerRequest): Promise<responses.PutUserCapabilitiesChangerResponse>;
    /**
     * Change a User Password (Known Value)
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutUserPasswordChangerRequest
     * @return PutUserPasswordChangerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutUserPasswordChanger.ts.html |here} to see how to use PutUserPasswordChanger API.
     */
    putUserPasswordChanger(putUserPasswordChangerRequest: requests.PutUserPasswordChangerRequest): Promise<responses.PutUserPasswordChangerResponse>;
    /**
     * Reset a User Password (Random Value)
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutUserPasswordResetterRequest
     * @return PutUserPasswordResetterResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutUserPasswordResetter.ts.html |here} to see how to use PutUserPasswordResetter API.
     */
    putUserPasswordResetter(putUserPasswordResetterRequest: requests.PutUserPasswordResetterRequest): Promise<responses.PutUserPasswordResetterResponse>;
    /**
     * Change User Status
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param PutUserStatusChangerRequest
     * @return PutUserStatusChangerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/PutUserStatusChanger.ts.html |here} to see how to use PutUserStatusChanger API.
     */
    putUserStatusChanger(putUserStatusChangerRequest: requests.PutUserStatusChangerRequest): Promise<responses.PutUserStatusChangerResponse>;
    /**
     * Search ApiKeys Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchApiKeysRequest
     * @return SearchApiKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchApiKeys.ts.html |here} to see how to use SearchApiKeys API.
     */
    searchApiKeys(searchApiKeysRequest: requests.SearchApiKeysRequest): Promise<responses.SearchApiKeysResponse>;
    /**
     * Search AuthTokens Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchAuthTokensRequest
     * @return SearchAuthTokensResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchAuthTokens.ts.html |here} to see how to use SearchAuthTokens API.
     */
    searchAuthTokens(searchAuthTokensRequest: requests.SearchAuthTokensRequest): Promise<responses.SearchAuthTokensResponse>;
    /**
     * Search Authentication Factor Settings Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchAuthenticationFactorSettingsRequest
     * @return SearchAuthenticationFactorSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchAuthenticationFactorSettings.ts.html |here} to see how to use SearchAuthenticationFactorSettings API.
     */
    searchAuthenticationFactorSettings(searchAuthenticationFactorSettingsRequest: requests.SearchAuthenticationFactorSettingsRequest): Promise<responses.SearchAuthenticationFactorSettingsResponse>;
    /**
     * Search CustomerSecretKeys Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchCustomerSecretKeysRequest
     * @return SearchCustomerSecretKeysResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchCustomerSecretKeys.ts.html |here} to see how to use SearchCustomerSecretKeys API.
     */
    searchCustomerSecretKeys(searchCustomerSecretKeysRequest: requests.SearchCustomerSecretKeysRequest): Promise<responses.SearchCustomerSecretKeysResponse>;
    /**
     * Search DynamicResourceGroups Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchDynamicResourceGroupsRequest
     * @return SearchDynamicResourceGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchDynamicResourceGroups.ts.html |here} to see how to use SearchDynamicResourceGroups API.
     */
    searchDynamicResourceGroups(searchDynamicResourceGroupsRequest: requests.SearchDynamicResourceGroupsRequest): Promise<responses.SearchDynamicResourceGroupsResponse>;
    /**
     * Search Groups Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchGroupsRequest
     * @return SearchGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchGroups.ts.html |here} to see how to use SearchGroups API.
     */
    searchGroups(searchGroupsRequest: requests.SearchGroupsRequest): Promise<responses.SearchGroupsResponse>;
    /**
     * Search Identity Providers Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchIdentityProvidersRequest
     * @return SearchIdentityProvidersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchIdentityProviders.ts.html |here} to see how to use SearchIdentityProviders API.
     */
    searchIdentityProviders(searchIdentityProvidersRequest: requests.SearchIdentityProvidersRequest): Promise<responses.SearchIdentityProvidersResponse>;
    /**
     * Search KmsiSettings Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchKmsiSettingsRequest
     * @return SearchKmsiSettingsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchKmsiSettings.ts.html |here} to see how to use SearchKmsiSettings API.
     */
    searchKmsiSettings(searchKmsiSettingsRequest: requests.SearchKmsiSettingsRequest): Promise<responses.SearchKmsiSettingsResponse>;
    /**
     * Search My Groups Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchMyGroupsRequest
     * @return SearchMyGroupsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchMyGroups.ts.html |here} to see how to use SearchMyGroups API.
     */
    searchMyGroups(searchMyGroupsRequest: requests.SearchMyGroupsRequest): Promise<responses.SearchMyGroupsResponse>;
    /**
     * Search Oauth2Clients Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchOAuth2ClientCredentialsRequest
     * @return SearchOAuth2ClientCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchOAuth2ClientCredentials.ts.html |here} to see how to use SearchOAuth2ClientCredentials API.
     */
    searchOAuth2ClientCredentials(searchOAuth2ClientCredentialsRequest: requests.SearchOAuth2ClientCredentialsRequest): Promise<responses.SearchOAuth2ClientCredentialsResponse>;
    /**
     * Search Password Policies Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchPasswordPoliciesRequest
     * @return SearchPasswordPoliciesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchPasswordPolicies.ts.html |here} to see how to use SearchPasswordPolicies API.
     */
    searchPasswordPolicies(searchPasswordPoliciesRequest: requests.SearchPasswordPoliciesRequest): Promise<responses.SearchPasswordPoliciesResponse>;
    /**
     * Search smtp credentials Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchSmtpCredentialsRequest
     * @return SearchSmtpCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchSmtpCredentials.ts.html |here} to see how to use SearchSmtpCredentials API.
     */
    searchSmtpCredentials(searchSmtpCredentialsRequest: requests.SearchSmtpCredentialsRequest): Promise<responses.SearchSmtpCredentialsResponse>;
    /**
     * Search a User's DBCredentials using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchUserDbCredentialsRequest
     * @return SearchUserDbCredentialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchUserDbCredentials.ts.html |here} to see how to use SearchUserDbCredentials API.
     */
    searchUserDbCredentials(searchUserDbCredentialsRequest: requests.SearchUserDbCredentialsRequest): Promise<responses.SearchUserDbCredentialsResponse>;
    /**
     * Search Users Using POST
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param SearchUsersRequest
     * @return SearchUsersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/identitydomains/SearchUsers.ts.html |here} to see how to use SearchUsers API.
     */
    searchUsers(searchUsersRequest: requests.SearchUsersRequest): Promise<responses.SearchUsersResponse>;
}
