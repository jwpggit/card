/**
 * Managed Access API
 * Use the Managed Access API to approve access requests, create and manage templates, and manage resource approval settings. For more information, see [Managed Access Overview](https://docs.oracle.com/en-us/iaas/managed-access/overview.htm).

Use the table of contents and search tool to explore the Managed Access API.

 * OpenAPI spec version: 20220126
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { LockboxWaiter } from "./lockbox-waiter";
export declare enum LockboxApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class LockboxClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": LockboxWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpOptions: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new LockboxWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): LockboxWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): LockboxWaiter;
    /**
     * Cancels the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CancelWorkRequestRequest
     * @return CancelWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/CancelWorkRequest.ts.html |here} to see how to use CancelWorkRequest API.
     */
    cancelWorkRequest(cancelWorkRequestRequest: requests.CancelWorkRequestRequest): Promise<responses.CancelWorkRequestResponse>;
    /**
     * Moves an ApprovalTemplate resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeApprovalTemplateCompartmentRequest
     * @return ChangeApprovalTemplateCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ChangeApprovalTemplateCompartment.ts.html |here} to see how to use ChangeApprovalTemplateCompartment API.
     */
    changeApprovalTemplateCompartment(changeApprovalTemplateCompartmentRequest: requests.ChangeApprovalTemplateCompartmentRequest): Promise<responses.ChangeApprovalTemplateCompartmentResponse>;
    /**
     * Moves a Lockbox resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ChangeLockboxCompartmentRequest
     * @return ChangeLockboxCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ChangeLockboxCompartment.ts.html |here} to see how to use ChangeLockboxCompartment API.
     */
    changeLockboxCompartment(changeLockboxCompartmentRequest: requests.ChangeLockboxCompartmentRequest): Promise<responses.ChangeLockboxCompartmentResponse>;
    /**
     * Creates a new access request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateAccessRequestRequest
     * @return CreateAccessRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/CreateAccessRequest.ts.html |here} to see how to use CreateAccessRequest API.
     */
    createAccessRequest(createAccessRequestRequest: requests.CreateAccessRequestRequest): Promise<responses.CreateAccessRequestResponse>;
    /**
     * Creates a new approval template.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateApprovalTemplateRequest
     * @return CreateApprovalTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/CreateApprovalTemplate.ts.html |here} to see how to use CreateApprovalTemplate API.
     */
    createApprovalTemplate(createApprovalTemplateRequest: requests.CreateApprovalTemplateRequest): Promise<responses.CreateApprovalTemplateResponse>;
    /**
     * Creates a new Lockbox.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateLockboxRequest
     * @return CreateLockboxResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/CreateLockbox.ts.html |here} to see how to use CreateLockbox API.
     */
    createLockbox(createLockboxRequest: requests.CreateLockboxRequest): Promise<responses.CreateLockboxResponse>;
    /**
     * Deletes an ApprovalTemplate resource by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteApprovalTemplateRequest
     * @return DeleteApprovalTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/DeleteApprovalTemplate.ts.html |here} to see how to use DeleteApprovalTemplate API.
     */
    deleteApprovalTemplate(deleteApprovalTemplateRequest: requests.DeleteApprovalTemplateRequest): Promise<responses.DeleteApprovalTemplateResponse>;
    /**
     * Deletes a Lockbox resource by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteLockboxRequest
     * @return DeleteLockboxResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/DeleteLockbox.ts.html |here} to see how to use DeleteLockbox API.
     */
    deleteLockbox(deleteLockboxRequest: requests.DeleteLockboxRequest): Promise<responses.DeleteLockboxResponse>;
    /**
     * Retrieves the access credential/material associated with the access request.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAccessMaterialsRequest
     * @return GetAccessMaterialsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/GetAccessMaterials.ts.html |here} to see how to use GetAccessMaterials API.
     */
    getAccessMaterials(getAccessMaterialsRequest: requests.GetAccessMaterialsRequest): Promise<responses.GetAccessMaterialsResponse>;
    /**
     * Retrieves an access request identified by the access request ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetAccessRequestRequest
     * @return GetAccessRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/GetAccessRequest.ts.html |here} to see how to use GetAccessRequest API.
     */
    getAccessRequest(getAccessRequestRequest: requests.GetAccessRequestRequest): Promise<responses.GetAccessRequestResponse>;
    /**
     * Retrieves an approval template identified by the approval template ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetApprovalTemplateRequest
     * @return GetApprovalTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/GetApprovalTemplate.ts.html |here} to see how to use GetApprovalTemplate API.
     */
    getApprovalTemplate(getApprovalTemplateRequest: requests.GetApprovalTemplateRequest): Promise<responses.GetApprovalTemplateResponse>;
    /**
     * Gets a Lockbox by identifier
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetLockboxRequest
     * @return GetLockboxResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/GetLockbox.ts.html |here} to see how to use GetLockbox API.
     */
    getLockbox(getLockboxRequest: requests.GetLockboxRequest): Promise<responses.GetLockboxResponse>;
    /**
     * Gets details of the work request with the given ID.
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Handle the AccessRequest
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param HandleAccessRequestRequest
     * @return HandleAccessRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/HandleAccessRequest.ts.html |here} to see how to use HandleAccessRequest API.
     */
    handleAccessRequest(handleAccessRequestRequest: requests.HandleAccessRequestRequest): Promise<responses.HandleAccessRequestResponse>;
    /**
     * Retrieves a list of AccessRequestSummary objects in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListAccessRequestsRequest
     * @return ListAccessRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ListAccessRequests.ts.html |here} to see how to use ListAccessRequests API.
     */
    listAccessRequests(listAccessRequestsRequest: requests.ListAccessRequestsRequest): Promise<responses.ListAccessRequestsResponse>;
    /**
     * Retrieves a list of ApprovalTemplateSummary objects in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListApprovalTemplatesRequest
     * @return ListApprovalTemplatesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ListApprovalTemplates.ts.html |here} to see how to use ListApprovalTemplates API.
     */
    listApprovalTemplates(listApprovalTemplatesRequest: requests.ListApprovalTemplatesRequest): Promise<responses.ListApprovalTemplatesResponse>;
    /**
     * Returns a list of Lockboxes.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListLockboxesRequest
     * @return ListLockboxesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ListLockboxes.ts.html |here} to see how to use ListLockboxes API.
     */
    listLockboxes(listLockboxesRequest: requests.ListLockboxesRequest): Promise<responses.ListLockboxesResponse>;
    /**
     * Returns a (paginated) list of errors for the work request with the given ID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Returns a (paginated) list of logs for the work request with the given ID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Updates the ApprovalTemplate
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateApprovalTemplateRequest
     * @return UpdateApprovalTemplateResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/UpdateApprovalTemplate.ts.html |here} to see how to use UpdateApprovalTemplate API.
     */
    updateApprovalTemplate(updateApprovalTemplateRequest: requests.UpdateApprovalTemplateRequest): Promise<responses.UpdateApprovalTemplateResponse>;
    /**
     * Updates the Lockbox
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateLockboxRequest
     * @return UpdateLockboxResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/lockbox/UpdateLockbox.ts.html |here} to see how to use UpdateLockbox API.
     */
    updateLockbox(updateLockboxRequest: requests.UpdateLockboxRequest): Promise<responses.UpdateLockboxResponse>;
}
