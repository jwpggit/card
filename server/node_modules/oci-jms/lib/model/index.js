"use strict";
/**
 * Java Management Service API
 * API for the Java Management Service. Use this API to view, create, and manage Fleets.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JavaReleaseSortBy = exports.JavaReleaseCollection = exports.JavaRelease = exports.JavaLicense = exports.JavaFamilySummary = exports.JavaFamilySortBy = exports.JavaFamilyCollection = exports.JavaFamily = exports.JavaArtifact = exports.InstallationUsageCollection = exports.InstallationUsage = exports.InstallationSortBy = exports.InstallationSiteSummary = exports.InstallationSiteSortBy = exports.InstallationSiteCollection = exports.InstallationSite = exports.GenerateAgentDeployScriptDetails = exports.FleetSummary = exports.FleetCollection = exports.FleetAgentOsConfiguration = exports.FleetAgentConfiguration = exports.FleetAdvancedFeatureConfiguration = exports.Fleet = exports.ExistingInstallationSiteId = exports.DeployedApplicationUsageCollection = exports.DeployedApplicationUsage = exports.DeployedApplicationSortBy = exports.CustomLog = exports.CryptoEventAnalysis = exports.CryptoAnalysisResultSummary = exports.CryptoAnalysisResultSortBy = exports.CryptoAnalysisResultMode = exports.CryptoAnalysisResultCollection = exports.CryptoAnalysisResult = exports.CreateFleetDetails = exports.CreateBlocklistDetails = exports.ChangeFleetCompartmentDetails = exports.BlocklistTarget = exports.BlocklistSortBy = exports.BlocklistEntry = exports.BlocklistCollection = exports.Blocklist = exports.ArtifactContentType = exports.ApplicationUsageCollection = exports.ApplicationUsage = exports.ApplicationSortBy = exports.Algorithms = exports.AdvancedUsageTracking = exports.AddFleetInstallationSitesDetails = exports.ActionType = void 0;
exports.TlsVersions = exports.SupportType = exports.SummarizedEventsLog = exports.SummarizeManagedInstanceUsageFields = exports.SummarizeJreUsageFields = exports.SummarizeInstallationUsageFields = exports.SummarizeApplicationUsageFields = exports.SortOrder = exports.SortBy = exports.ScanLibraryUsageDetails = exports.ScanJavaServerUsageDetails = exports.ResourceInventory = exports.RequestJfrRecordingsDetails = exports.RequestCryptoAnalysesDetails = exports.RemoveFleetInstallationSitesDetails = exports.ReleaseType = exports.Principal = exports.PostInstallationActions = exports.PostInstallationActionSettings = exports.OsFamily = exports.OperationType = exports.OperationStatus = exports.OperatingSystem = exports.NewInstallationSite = exports.MinimumKeySizeSettings = exports.ManagedInstanceUsageCollection = exports.ManagedInstanceUsage = exports.ManagedInstanceType = exports.ManagedInstanceSortBy = exports.LifecycleState = exports.LicenseType = exports.LibraryUsageCollection = exports.LibraryUsage = exports.LibrarySortBy = exports.Lcm = exports.KeySizeAlgorithm = exports.JreUsageCollection = exports.JreUsage = exports.JreSortBy = exports.JreSecurityStatus = exports.JfrRecording = exports.JfrAttachmentTarget = exports.JavaServerUsageCollection = exports.JavaServerUsage = exports.JavaServerSortBy = exports.JavaServerInstanceUsageCollection = exports.JavaServerInstanceUsage = exports.JavaServerInstanceSortBy = exports.JavaRuntimeId = exports.JavaReleaseSummary = void 0;
exports.WorkRequestResource = exports.WorkRequestLogEntryCollection = exports.WorkRequestLogEntry = exports.WorkRequestErrorCollection = exports.WorkRequestError = exports.WorkRequestCollection = exports.WorkRequest = exports.WorkItemSummary = exports.WorkItemStatus = exports.WorkItemCollection = exports.UpdateFleetDetails = exports.UpdateFleetAgentConfigurationDetails = exports.UpdateFleetAdvancedFeatureConfigurationDetails = void 0;
const ActionType = __importStar(require("./action-type"));
exports.ActionType = ActionType.ActionType;
const AddFleetInstallationSitesDetails = __importStar(require("./add-fleet-installation-sites-details"));
exports.AddFleetInstallationSitesDetails = AddFleetInstallationSitesDetails.AddFleetInstallationSitesDetails;
const AdvancedUsageTracking = __importStar(require("./advanced-usage-tracking"));
exports.AdvancedUsageTracking = AdvancedUsageTracking.AdvancedUsageTracking;
const Algorithms = __importStar(require("./algorithms"));
exports.Algorithms = Algorithms.Algorithms;
const ApplicationSortBy = __importStar(require("./application-sort-by"));
exports.ApplicationSortBy = ApplicationSortBy.ApplicationSortBy;
const ApplicationUsage = __importStar(require("./application-usage"));
exports.ApplicationUsage = ApplicationUsage.ApplicationUsage;
const ApplicationUsageCollection = __importStar(require("./application-usage-collection"));
exports.ApplicationUsageCollection = ApplicationUsageCollection.ApplicationUsageCollection;
const ArtifactContentType = __importStar(require("./artifact-content-type"));
exports.ArtifactContentType = ArtifactContentType.ArtifactContentType;
const Blocklist = __importStar(require("./blocklist"));
exports.Blocklist = Blocklist.Blocklist;
const BlocklistCollection = __importStar(require("./blocklist-collection"));
exports.BlocklistCollection = BlocklistCollection.BlocklistCollection;
const BlocklistEntry = __importStar(require("./blocklist-entry"));
exports.BlocklistEntry = BlocklistEntry.BlocklistEntry;
const BlocklistSortBy = __importStar(require("./blocklist-sort-by"));
exports.BlocklistSortBy = BlocklistSortBy.BlocklistSortBy;
const BlocklistTarget = __importStar(require("./blocklist-target"));
exports.BlocklistTarget = BlocklistTarget.BlocklistTarget;
const ChangeFleetCompartmentDetails = __importStar(require("./change-fleet-compartment-details"));
exports.ChangeFleetCompartmentDetails = ChangeFleetCompartmentDetails.ChangeFleetCompartmentDetails;
const CreateBlocklistDetails = __importStar(require("./create-blocklist-details"));
exports.CreateBlocklistDetails = CreateBlocklistDetails.CreateBlocklistDetails;
const CreateFleetDetails = __importStar(require("./create-fleet-details"));
exports.CreateFleetDetails = CreateFleetDetails.CreateFleetDetails;
const CryptoAnalysisResult = __importStar(require("./crypto-analysis-result"));
exports.CryptoAnalysisResult = CryptoAnalysisResult.CryptoAnalysisResult;
const CryptoAnalysisResultCollection = __importStar(require("./crypto-analysis-result-collection"));
exports.CryptoAnalysisResultCollection = CryptoAnalysisResultCollection.CryptoAnalysisResultCollection;
const CryptoAnalysisResultMode = __importStar(require("./crypto-analysis-result-mode"));
exports.CryptoAnalysisResultMode = CryptoAnalysisResultMode.CryptoAnalysisResultMode;
const CryptoAnalysisResultSortBy = __importStar(require("./crypto-analysis-result-sort-by"));
exports.CryptoAnalysisResultSortBy = CryptoAnalysisResultSortBy.CryptoAnalysisResultSortBy;
const CryptoAnalysisResultSummary = __importStar(require("./crypto-analysis-result-summary"));
exports.CryptoAnalysisResultSummary = CryptoAnalysisResultSummary.CryptoAnalysisResultSummary;
const CryptoEventAnalysis = __importStar(require("./crypto-event-analysis"));
exports.CryptoEventAnalysis = CryptoEventAnalysis.CryptoEventAnalysis;
const CustomLog = __importStar(require("./custom-log"));
exports.CustomLog = CustomLog.CustomLog;
const DeployedApplicationSortBy = __importStar(require("./deployed-application-sort-by"));
exports.DeployedApplicationSortBy = DeployedApplicationSortBy.DeployedApplicationSortBy;
const DeployedApplicationUsage = __importStar(require("./deployed-application-usage"));
exports.DeployedApplicationUsage = DeployedApplicationUsage.DeployedApplicationUsage;
const DeployedApplicationUsageCollection = __importStar(require("./deployed-application-usage-collection"));
exports.DeployedApplicationUsageCollection = DeployedApplicationUsageCollection.DeployedApplicationUsageCollection;
const ExistingInstallationSiteId = __importStar(require("./existing-installation-site-id"));
exports.ExistingInstallationSiteId = ExistingInstallationSiteId.ExistingInstallationSiteId;
const Fleet = __importStar(require("./fleet"));
exports.Fleet = Fleet.Fleet;
const FleetAdvancedFeatureConfiguration = __importStar(require("./fleet-advanced-feature-configuration"));
exports.FleetAdvancedFeatureConfiguration = FleetAdvancedFeatureConfiguration.FleetAdvancedFeatureConfiguration;
const FleetAgentConfiguration = __importStar(require("./fleet-agent-configuration"));
exports.FleetAgentConfiguration = FleetAgentConfiguration.FleetAgentConfiguration;
const FleetAgentOsConfiguration = __importStar(require("./fleet-agent-os-configuration"));
exports.FleetAgentOsConfiguration = FleetAgentOsConfiguration.FleetAgentOsConfiguration;
const FleetCollection = __importStar(require("./fleet-collection"));
exports.FleetCollection = FleetCollection.FleetCollection;
const FleetSummary = __importStar(require("./fleet-summary"));
exports.FleetSummary = FleetSummary.FleetSummary;
const GenerateAgentDeployScriptDetails = __importStar(require("./generate-agent-deploy-script-details"));
exports.GenerateAgentDeployScriptDetails = GenerateAgentDeployScriptDetails.GenerateAgentDeployScriptDetails;
const InstallationSite = __importStar(require("./installation-site"));
exports.InstallationSite = InstallationSite.InstallationSite;
const InstallationSiteCollection = __importStar(require("./installation-site-collection"));
exports.InstallationSiteCollection = InstallationSiteCollection.InstallationSiteCollection;
const InstallationSiteSortBy = __importStar(require("./installation-site-sort-by"));
exports.InstallationSiteSortBy = InstallationSiteSortBy.InstallationSiteSortBy;
const InstallationSiteSummary = __importStar(require("./installation-site-summary"));
exports.InstallationSiteSummary = InstallationSiteSummary.InstallationSiteSummary;
const InstallationSortBy = __importStar(require("./installation-sort-by"));
exports.InstallationSortBy = InstallationSortBy.InstallationSortBy;
const InstallationUsage = __importStar(require("./installation-usage"));
exports.InstallationUsage = InstallationUsage.InstallationUsage;
const InstallationUsageCollection = __importStar(require("./installation-usage-collection"));
exports.InstallationUsageCollection = InstallationUsageCollection.InstallationUsageCollection;
const JavaArtifact = __importStar(require("./java-artifact"));
exports.JavaArtifact = JavaArtifact.JavaArtifact;
const JavaFamily = __importStar(require("./java-family"));
exports.JavaFamily = JavaFamily.JavaFamily;
const JavaFamilyCollection = __importStar(require("./java-family-collection"));
exports.JavaFamilyCollection = JavaFamilyCollection.JavaFamilyCollection;
const JavaFamilySortBy = __importStar(require("./java-family-sort-by"));
exports.JavaFamilySortBy = JavaFamilySortBy.JavaFamilySortBy;
const JavaFamilySummary = __importStar(require("./java-family-summary"));
exports.JavaFamilySummary = JavaFamilySummary.JavaFamilySummary;
const JavaLicense = __importStar(require("./java-license"));
exports.JavaLicense = JavaLicense.JavaLicense;
const JavaRelease = __importStar(require("./java-release"));
exports.JavaRelease = JavaRelease.JavaRelease;
const JavaReleaseCollection = __importStar(require("./java-release-collection"));
exports.JavaReleaseCollection = JavaReleaseCollection.JavaReleaseCollection;
const JavaReleaseSortBy = __importStar(require("./java-release-sort-by"));
exports.JavaReleaseSortBy = JavaReleaseSortBy.JavaReleaseSortBy;
const JavaReleaseSummary = __importStar(require("./java-release-summary"));
exports.JavaReleaseSummary = JavaReleaseSummary.JavaReleaseSummary;
const JavaRuntimeId = __importStar(require("./java-runtime-id"));
exports.JavaRuntimeId = JavaRuntimeId.JavaRuntimeId;
const JavaServerInstanceSortBy = __importStar(require("./java-server-instance-sort-by"));
exports.JavaServerInstanceSortBy = JavaServerInstanceSortBy.JavaServerInstanceSortBy;
const JavaServerInstanceUsage = __importStar(require("./java-server-instance-usage"));
exports.JavaServerInstanceUsage = JavaServerInstanceUsage.JavaServerInstanceUsage;
const JavaServerInstanceUsageCollection = __importStar(require("./java-server-instance-usage-collection"));
exports.JavaServerInstanceUsageCollection = JavaServerInstanceUsageCollection.JavaServerInstanceUsageCollection;
const JavaServerSortBy = __importStar(require("./java-server-sort-by"));
exports.JavaServerSortBy = JavaServerSortBy.JavaServerSortBy;
const JavaServerUsage = __importStar(require("./java-server-usage"));
exports.JavaServerUsage = JavaServerUsage.JavaServerUsage;
const JavaServerUsageCollection = __importStar(require("./java-server-usage-collection"));
exports.JavaServerUsageCollection = JavaServerUsageCollection.JavaServerUsageCollection;
const JfrAttachmentTarget = __importStar(require("./jfr-attachment-target"));
exports.JfrAttachmentTarget = JfrAttachmentTarget.JfrAttachmentTarget;
const JfrRecording = __importStar(require("./jfr-recording"));
exports.JfrRecording = JfrRecording.JfrRecording;
const JreSecurityStatus = __importStar(require("./jre-security-status"));
exports.JreSecurityStatus = JreSecurityStatus.JreSecurityStatus;
const JreSortBy = __importStar(require("./jre-sort-by"));
exports.JreSortBy = JreSortBy.JreSortBy;
const JreUsage = __importStar(require("./jre-usage"));
exports.JreUsage = JreUsage.JreUsage;
const JreUsageCollection = __importStar(require("./jre-usage-collection"));
exports.JreUsageCollection = JreUsageCollection.JreUsageCollection;
const KeySizeAlgorithm = __importStar(require("./key-size-algorithm"));
exports.KeySizeAlgorithm = KeySizeAlgorithm.KeySizeAlgorithm;
const Lcm = __importStar(require("./lcm"));
exports.Lcm = Lcm.Lcm;
const LibrarySortBy = __importStar(require("./library-sort-by"));
exports.LibrarySortBy = LibrarySortBy.LibrarySortBy;
const LibraryUsage = __importStar(require("./library-usage"));
exports.LibraryUsage = LibraryUsage.LibraryUsage;
const LibraryUsageCollection = __importStar(require("./library-usage-collection"));
exports.LibraryUsageCollection = LibraryUsageCollection.LibraryUsageCollection;
const LicenseType = __importStar(require("./license-type"));
exports.LicenseType = LicenseType.LicenseType;
const LifecycleState = __importStar(require("./lifecycle-state"));
exports.LifecycleState = LifecycleState.LifecycleState;
const ManagedInstanceSortBy = __importStar(require("./managed-instance-sort-by"));
exports.ManagedInstanceSortBy = ManagedInstanceSortBy.ManagedInstanceSortBy;
const ManagedInstanceType = __importStar(require("./managed-instance-type"));
exports.ManagedInstanceType = ManagedInstanceType.ManagedInstanceType;
const ManagedInstanceUsage = __importStar(require("./managed-instance-usage"));
exports.ManagedInstanceUsage = ManagedInstanceUsage.ManagedInstanceUsage;
const ManagedInstanceUsageCollection = __importStar(require("./managed-instance-usage-collection"));
exports.ManagedInstanceUsageCollection = ManagedInstanceUsageCollection.ManagedInstanceUsageCollection;
const MinimumKeySizeSettings = __importStar(require("./minimum-key-size-settings"));
exports.MinimumKeySizeSettings = MinimumKeySizeSettings.MinimumKeySizeSettings;
const NewInstallationSite = __importStar(require("./new-installation-site"));
exports.NewInstallationSite = NewInstallationSite.NewInstallationSite;
const OperatingSystem = __importStar(require("./operating-system"));
exports.OperatingSystem = OperatingSystem.OperatingSystem;
const OperationStatus = __importStar(require("./operation-status"));
exports.OperationStatus = OperationStatus.OperationStatus;
const OperationType = __importStar(require("./operation-type"));
exports.OperationType = OperationType.OperationType;
const OsFamily = __importStar(require("./os-family"));
exports.OsFamily = OsFamily.OsFamily;
const PostInstallationActionSettings = __importStar(require("./post-installation-action-settings"));
exports.PostInstallationActionSettings = PostInstallationActionSettings.PostInstallationActionSettings;
const PostInstallationActions = __importStar(require("./post-installation-actions"));
exports.PostInstallationActions = PostInstallationActions.PostInstallationActions;
const Principal = __importStar(require("./principal"));
exports.Principal = Principal.Principal;
const ReleaseType = __importStar(require("./release-type"));
exports.ReleaseType = ReleaseType.ReleaseType;
const RemoveFleetInstallationSitesDetails = __importStar(require("./remove-fleet-installation-sites-details"));
exports.RemoveFleetInstallationSitesDetails = RemoveFleetInstallationSitesDetails.RemoveFleetInstallationSitesDetails;
const RequestCryptoAnalysesDetails = __importStar(require("./request-crypto-analyses-details"));
exports.RequestCryptoAnalysesDetails = RequestCryptoAnalysesDetails.RequestCryptoAnalysesDetails;
const RequestJfrRecordingsDetails = __importStar(require("./request-jfr-recordings-details"));
exports.RequestJfrRecordingsDetails = RequestJfrRecordingsDetails.RequestJfrRecordingsDetails;
const ResourceInventory = __importStar(require("./resource-inventory"));
exports.ResourceInventory = ResourceInventory.ResourceInventory;
const ScanJavaServerUsageDetails = __importStar(require("./scan-java-server-usage-details"));
exports.ScanJavaServerUsageDetails = ScanJavaServerUsageDetails.ScanJavaServerUsageDetails;
const ScanLibraryUsageDetails = __importStar(require("./scan-library-usage-details"));
exports.ScanLibraryUsageDetails = ScanLibraryUsageDetails.ScanLibraryUsageDetails;
const SortBy = __importStar(require("./sort-by"));
exports.SortBy = SortBy.SortBy;
const SortOrder = __importStar(require("./sort-order"));
exports.SortOrder = SortOrder.SortOrder;
const SummarizeApplicationUsageFields = __importStar(require("./summarize-application-usage-fields"));
exports.SummarizeApplicationUsageFields = SummarizeApplicationUsageFields.SummarizeApplicationUsageFields;
const SummarizeInstallationUsageFields = __importStar(require("./summarize-installation-usage-fields"));
exports.SummarizeInstallationUsageFields = SummarizeInstallationUsageFields.SummarizeInstallationUsageFields;
const SummarizeJreUsageFields = __importStar(require("./summarize-jre-usage-fields"));
exports.SummarizeJreUsageFields = SummarizeJreUsageFields.SummarizeJreUsageFields;
const SummarizeManagedInstanceUsageFields = __importStar(require("./summarize-managed-instance-usage-fields"));
exports.SummarizeManagedInstanceUsageFields = SummarizeManagedInstanceUsageFields.SummarizeManagedInstanceUsageFields;
const SummarizedEventsLog = __importStar(require("./summarized-events-log"));
exports.SummarizedEventsLog = SummarizedEventsLog.SummarizedEventsLog;
const SupportType = __importStar(require("./support-type"));
exports.SupportType = SupportType.SupportType;
const TlsVersions = __importStar(require("./tls-versions"));
exports.TlsVersions = TlsVersions.TlsVersions;
const UpdateFleetAdvancedFeatureConfigurationDetails = __importStar(require("./update-fleet-advanced-feature-configuration-details"));
exports.UpdateFleetAdvancedFeatureConfigurationDetails = UpdateFleetAdvancedFeatureConfigurationDetails.UpdateFleetAdvancedFeatureConfigurationDetails;
const UpdateFleetAgentConfigurationDetails = __importStar(require("./update-fleet-agent-configuration-details"));
exports.UpdateFleetAgentConfigurationDetails = UpdateFleetAgentConfigurationDetails.UpdateFleetAgentConfigurationDetails;
const UpdateFleetDetails = __importStar(require("./update-fleet-details"));
exports.UpdateFleetDetails = UpdateFleetDetails.UpdateFleetDetails;
const WorkItemCollection = __importStar(require("./work-item-collection"));
exports.WorkItemCollection = WorkItemCollection.WorkItemCollection;
const WorkItemStatus = __importStar(require("./work-item-status"));
exports.WorkItemStatus = WorkItemStatus.WorkItemStatus;
const WorkItemSummary = __importStar(require("./work-item-summary"));
exports.WorkItemSummary = WorkItemSummary.WorkItemSummary;
const WorkRequest = __importStar(require("./work-request"));
exports.WorkRequest = WorkRequest.WorkRequest;
const WorkRequestCollection = __importStar(require("./work-request-collection"));
exports.WorkRequestCollection = WorkRequestCollection.WorkRequestCollection;
const WorkRequestError = __importStar(require("./work-request-error"));
exports.WorkRequestError = WorkRequestError.WorkRequestError;
const WorkRequestErrorCollection = __importStar(require("./work-request-error-collection"));
exports.WorkRequestErrorCollection = WorkRequestErrorCollection.WorkRequestErrorCollection;
const WorkRequestLogEntry = __importStar(require("./work-request-log-entry"));
exports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;
const WorkRequestLogEntryCollection = __importStar(require("./work-request-log-entry-collection"));
exports.WorkRequestLogEntryCollection = WorkRequestLogEntryCollection.WorkRequestLogEntryCollection;
const WorkRequestResource = __importStar(require("./work-request-resource"));
exports.WorkRequestResource = WorkRequestResource.WorkRequestResource;
//# sourceMappingURL=index.js.map