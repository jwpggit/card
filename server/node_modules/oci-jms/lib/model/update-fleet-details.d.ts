/**
 * Java Management Service API
 * API for the Java Management Service. Use this API to view, create, and manage Fleets.
 * OpenAPI spec version: 20210610
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Attributes to update a Fleet.
 */
export interface UpdateFleetDetails {
    /**
     * The name of the Fleet. The displayName must be unique for Fleets in the same compartment.
     */
    "displayName"?: string;
    /**
     * The Fleet's description.
     */
    "description"?: string;
    "inventoryLog"?: model.CustomLog;
    "operationLog"?: model.CustomLog;
    /**
     * Whether or not advanced features are enabled in this fleet.
     * Deprecated, use `/fleets/{fleetId}/advanceFeatureConfiguration` api instead.
     *
     */
    "isAdvancedFeaturesEnabled"?: boolean;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/Content/Tagging/Concepts/understandingfreeformtags.htm).)
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
}
export declare namespace UpdateFleetDetails {
    function getJsonObj(obj: UpdateFleetDetails): object;
    function getDeserializedJsonObj(obj: UpdateFleetDetails): object;
}
