/**
 * Monitoring API
 * Use the Monitoring API to manage metric queries and alarms for assessing the health, capacity, and performance of your cloud resources.
Endpoints vary by operation. For PostMetric, use the `telemetry-ingestion` endpoints; for all other operations, use the `telemetry` endpoints.
For information about monitoring, see [Monitoring Overview](/iaas/Content/Monitoring/Concepts/monitoringoverview.htm).

 * OpenAPI spec version: 20180401
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * A timestamped alarm state entry for a metric stream.
 *
 */
export interface AlarmDimensionStatesEntry {
    /**
     * Indicator of the metric stream associated with the alarm state entry. Includes one or more dimension key-value pairs.
     *
     */
    "dimensions": {
        [key: string]: string;
    };
    /**
      * Transition state (status value) associated with the alarm state entry.
  * <p>
  Example: `FIRING`
  *
      */
    "status": AlarmDimensionStatesEntry.Status;
    /**
      * Transition time associated with the alarm state entry. Format defined by RFC3339.
  * <p>
  Example: `2022-02-01T01:02:29.600Z`
  *
      */
    "timestamp": Date;
}
export declare namespace AlarmDimensionStatesEntry {
    enum Status {
        Firing = "FIRING",
        Ok = "OK",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: AlarmDimensionStatesEntry): object;
    function getDeserializedJsonObj(obj: AlarmDimensionStatesEntry): object;
}
