/**
 * Container Instance API
 * A description of the Container Instance API
 * OpenAPI spec version: 20210415
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { ContainerInstanceWaiter } from "./containerinstance-waiter";
export declare enum ContainerInstanceApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class ContainerInstanceClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": ContainerInstanceWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpOptions: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new ContainerInstanceWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): ContainerInstanceWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): ContainerInstanceWaiter;
    /**
     * Moves a ContainerInstance resource from one compartment identifier to another. When provided, If-Match is checked against ETag values of the resource.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ChangeContainerInstanceCompartmentRequest
     * @return ChangeContainerInstanceCompartmentResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ChangeContainerInstanceCompartment.ts.html |here} to see how to use ChangeContainerInstanceCompartment API.
     */
    changeContainerInstanceCompartment(changeContainerInstanceCompartmentRequest: requests.ChangeContainerInstanceCompartmentRequest): Promise<responses.ChangeContainerInstanceCompartmentResponse>;
    /**
     * Creates a new ContainerInstance.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param CreateContainerInstanceRequest
     * @return CreateContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/CreateContainerInstance.ts.html |here} to see how to use CreateContainerInstance API.
     */
    createContainerInstance(createContainerInstanceRequest: requests.CreateContainerInstanceRequest): Promise<responses.CreateContainerInstanceResponse>;
    /**
     * Deletes a ContainerInstance resource by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param DeleteContainerInstanceRequest
     * @return DeleteContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/DeleteContainerInstance.ts.html |here} to see how to use DeleteContainerInstance API.
     */
    deleteContainerInstance(deleteContainerInstanceRequest: requests.DeleteContainerInstanceRequest): Promise<responses.DeleteContainerInstanceResponse>;
    /**
     * Get details about a single container by the container ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetContainerRequest
     * @return GetContainerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/GetContainer.ts.html |here} to see how to use GetContainer API.
     */
    getContainer(getContainerRequest: requests.GetContainerRequest): Promise<responses.GetContainerResponse>;
    /**
     * Gets a ContainerInstance by identifier
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetContainerInstanceRequest
     * @return GetContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/GetContainerInstance.ts.html |here} to see how to use GetContainerInstance API.
     */
    getContainerInstance(getContainerInstanceRequest: requests.GetContainerInstanceRequest): Promise<responses.GetContainerInstanceResponse>;
    /**
     * Gets the status of the work request with the given ID.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param GetWorkRequestRequest
     * @return GetWorkRequestResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.
     */
    getWorkRequest(getWorkRequestRequest: requests.GetWorkRequestRequest): Promise<responses.GetWorkRequestResponse>;
    /**
     * Get a list of shapes for creating Container Instances and their details.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListContainerInstanceShapesRequest
     * @return ListContainerInstanceShapesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ListContainerInstanceShapes.ts.html |here} to see how to use ListContainerInstanceShapes API.
     */
    listContainerInstanceShapes(listContainerInstanceShapesRequest: requests.ListContainerInstanceShapesRequest): Promise<responses.ListContainerInstanceShapesResponse>;
    /**
     * Returns a list of ContainerInstances.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListContainerInstancesRequest
     * @return ListContainerInstancesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ListContainerInstances.ts.html |here} to see how to use ListContainerInstances API.
     */
    listContainerInstances(listContainerInstancesRequest: requests.ListContainerInstancesRequest): Promise<responses.ListContainerInstancesResponse>;
    /**
     * Return a list of Containers.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListContainersRequest
     * @return ListContainersResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ListContainers.ts.html |here} to see how to use ListContainers API.
     */
    listContainers(listContainersRequest: requests.ListContainersRequest): Promise<responses.ListContainersResponse>;
    /**
     * Return a (paginated) list of errors for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestErrorsRequest
     * @return ListWorkRequestErrorsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ListWorkRequestErrors.ts.html |here} to see how to use ListWorkRequestErrors API.
     */
    listWorkRequestErrors(listWorkRequestErrorsRequest: requests.ListWorkRequestErrorsRequest): Promise<responses.ListWorkRequestErrorsResponse>;
    /**
     * Return a (paginated) list of logs for a given work request.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestLogsRequest
     * @return ListWorkRequestLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ListWorkRequestLogs.ts.html |here} to see how to use ListWorkRequestLogs API.
     */
    listWorkRequestLogs(listWorkRequestLogsRequest: requests.ListWorkRequestLogsRequest): Promise<responses.ListWorkRequestLogsResponse>;
    /**
     * Lists the work requests in a compartment.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param ListWorkRequestsRequest
     * @return ListWorkRequestsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.
     */
    listWorkRequests(listWorkRequestsRequest: requests.ListWorkRequestsRequest): Promise<responses.ListWorkRequestsResponse>;
    /**
     * Restarts a container instance. When provided, If-Match is checked against ETag values of the container instance.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RestartContainerInstanceRequest
     * @return RestartContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/RestartContainerInstance.ts.html |here} to see how to use RestartContainerInstance API.
     */
    restartContainerInstance(restartContainerInstanceRequest: requests.RestartContainerInstanceRequest): Promise<responses.RestartContainerInstanceResponse>;
    /**
     * Retrieve recent log from a single container by the container ID up to 256KB.
     *
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param RetrieveLogsRequest
     * @return RetrieveLogsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/RetrieveLogs.ts.html |here} to see how to use RetrieveLogs API.
     */
    retrieveLogs(retrieveLogsRequest: requests.RetrieveLogsRequest): Promise<responses.RetrieveLogsResponse>;
    /**
     * Starts a container instance if it is \"inactive\". No effect otherwise. When provided, If-Match is checked against ETag values of the container instance.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StartContainerInstanceRequest
     * @return StartContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/StartContainerInstance.ts.html |here} to see how to use StartContainerInstance API.
     */
    startContainerInstance(startContainerInstanceRequest: requests.StartContainerInstanceRequest): Promise<responses.StartContainerInstanceResponse>;
    /**
     * Stops a container instance if it is \"active\". No effect otherwise. When provided, If-Match is checked against ETag values of the container instance.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param StopContainerInstanceRequest
     * @return StopContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/StopContainerInstance.ts.html |here} to see how to use StopContainerInstance API.
     */
    stopContainerInstance(stopContainerInstanceRequest: requests.StopContainerInstanceRequest): Promise<responses.StopContainerInstanceResponse>;
    /**
     * Update a Container.
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateContainerRequest
     * @return UpdateContainerResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/UpdateContainer.ts.html |here} to see how to use UpdateContainer API.
     */
    updateContainer(updateContainerRequest: requests.UpdateContainerRequest): Promise<responses.UpdateContainerResponse>;
    /**
     * Updates the ContainerInstance
     * This operation uses {@link common.OciSdkDefaultRetryConfiguration} by default if no retry configuration is defined by the user.
     * @param UpdateContainerInstanceRequest
     * @return UpdateContainerInstanceResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/containerinstances/UpdateContainerInstance.ts.html |here} to see how to use UpdateContainerInstance API.
     */
    updateContainerInstance(updateContainerInstanceRequest: requests.UpdateContainerInstanceRequest): Promise<responses.UpdateContainerInstanceResponse>;
}
