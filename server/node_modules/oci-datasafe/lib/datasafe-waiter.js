"use strict";
/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataSafeWaiter = void 0;
const models = __importStar(require("./model"));
const oci_common_1 = require("oci-common");
class DataSafeWaiter {
    constructor(client, config) {
        this.client = client;
        this.config = config;
    }
    /**
     * Waits forAlert till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAlertResponse
     */
    forAlert(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getAlert(request), response => targetStates.includes(response.alert.lifecycleState));
        });
    }
    /**
     * Waits forAlertPolicy till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAlertPolicyResponse | null (null in case of 404 response)
     */
    forAlertPolicy(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAlertPolicy(request), response => targetStates.includes(response.alertPolicy.lifecycleState), targetStates.includes(models.AlertPolicyLifecycleState.Deleted));
        });
    }
    /**
     * Waits forAuditArchiveRetrieval till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAuditArchiveRetrievalResponse | null (null in case of 404 response)
     */
    forAuditArchiveRetrieval(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAuditArchiveRetrieval(request), response => targetStates.includes(response.auditArchiveRetrieval.lifecycleState), targetStates.includes(models.AuditArchiveRetrievalLifecycleState.Deleted));
        });
    }
    /**
     * Waits forAuditPolicy till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAuditPolicyResponse | null (null in case of 404 response)
     */
    forAuditPolicy(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAuditPolicy(request), response => targetStates.includes(response.auditPolicy.lifecycleState), targetStates.includes(models.AuditPolicyLifecycleState.Deleted));
        });
    }
    /**
     * Waits forAuditProfile till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAuditProfileResponse | null (null in case of 404 response)
     */
    forAuditProfile(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getAuditProfile(request), response => targetStates.includes(response.auditProfile.lifecycleState), targetStates.includes(models.AuditProfileLifecycleState.Deleted));
        });
    }
    /**
     * Waits forAuditTrail till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetAuditTrailResponse
     */
    forAuditTrail(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getAuditTrail(request), response => targetStates.includes(response.auditTrail.lifecycleState));
        });
    }
    /**
     * Waits forDataSafeConfiguration till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDataSafeConfigurationResponse | null (null in case of 404 response)
     */
    forDataSafeConfiguration(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDataSafeConfiguration(request), response => targetStates.includes(response.dataSafeConfiguration.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDataSafePrivateEndpoint till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDataSafePrivateEndpointResponse | null (null in case of 404 response)
     */
    forDataSafePrivateEndpoint(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDataSafePrivateEndpoint(request), response => targetStates.includes(response.dataSafePrivateEndpoint.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forDiscoveryJob till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetDiscoveryJobResponse | null (null in case of 404 response)
     */
    forDiscoveryJob(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDiscoveryJob(request), response => targetStates.includes(response.discoveryJob.lifecycleState), targetStates.includes(models.DiscoveryLifecycleState.Deleted));
        });
    }
    /**
     * Waits forLibraryMaskingFormat till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetLibraryMaskingFormatResponse | null (null in case of 404 response)
     */
    forLibraryMaskingFormat(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getLibraryMaskingFormat(request), response => targetStates.includes(response.libraryMaskingFormat.lifecycleState), targetStates.includes(models.MaskingLifecycleState.Deleted));
        });
    }
    /**
     * Waits forMaskingColumn till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMaskingColumnResponse
     */
    forMaskingColumn(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getMaskingColumn(request), response => targetStates.includes(response.maskingColumn.lifecycleState));
        });
    }
    /**
     * Waits forMaskingPolicy till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMaskingPolicyResponse | null (null in case of 404 response)
     */
    forMaskingPolicy(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMaskingPolicy(request), response => targetStates.includes(response.maskingPolicy.lifecycleState), targetStates.includes(models.MaskingLifecycleState.Deleted));
        });
    }
    /**
     * Waits forMaskingReport till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetMaskingReportResponse | null (null in case of 404 response)
     */
    forMaskingReport(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getMaskingReport(request), response => targetStates.includes(response.maskingReport.lifecycleState), targetStates.includes(models.MaskingLifecycleState.Deleted));
        });
    }
    /**
     * Waits forOnPremConnector till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetOnPremConnectorResponse | null (null in case of 404 response)
     */
    forOnPremConnector(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getOnPremConnector(request), response => targetStates.includes(response.onPremConnector.lifecycleState), targetStates.includes(models.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forReport till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetReportResponse
     */
    forReport(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getReport(request), response => targetStates.includes(response.report.lifecycleState));
        });
    }
    /**
     * Waits forReportDefinition till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetReportDefinitionResponse | null (null in case of 404 response)
     */
    forReportDefinition(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getReportDefinition(request), response => targetStates.includes(response.reportDefinition.lifecycleState), targetStates.includes(models.ReportDefinitionLifecycleState.Deleted));
        });
    }
    /**
     * Waits forSdmMaskingPolicyDifference till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSdmMaskingPolicyDifferenceResponse | null (null in case of 404 response)
     */
    forSdmMaskingPolicyDifference(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSdmMaskingPolicyDifference(request), response => targetStates.includes(response.sdmMaskingPolicyDifference.lifecycleState), targetStates.includes(models.SdmMaskingPolicyDifference.LifecycleState.Deleted));
        });
    }
    /**
     * Waits forSecurityAssessment till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSecurityAssessmentResponse | null (null in case of 404 response)
     */
    forSecurityAssessment(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSecurityAssessment(request), response => targetStates.includes(response.securityAssessment.lifecycleState), targetStates.includes(models.SecurityAssessmentLifecycleState.Deleted));
        });
    }
    /**
     * Waits forSecurityAssessmentComparison till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSecurityAssessmentComparisonResponse
     */
    forSecurityAssessmentComparison(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getSecurityAssessmentComparison(request), response => targetStates.includes(response.securityAssessmentComparison.lifecycleState));
        });
    }
    /**
     * Waits forSensitiveColumn till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSensitiveColumnResponse
     */
    forSensitiveColumn(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getSensitiveColumn(request), response => targetStates.includes(response.sensitiveColumn.lifecycleState));
        });
    }
    /**
     * Waits forSensitiveDataModel till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSensitiveDataModelResponse | null (null in case of 404 response)
     */
    forSensitiveDataModel(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSensitiveDataModel(request), response => targetStates.includes(response.sensitiveDataModel.lifecycleState), targetStates.includes(models.DiscoveryLifecycleState.Deleted));
        });
    }
    /**
     * Waits forSensitiveType till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetSensitiveTypeResponse | null (null in case of 404 response)
     */
    forSensitiveType(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getSensitiveType(request), response => targetStates.includes(response.sensitiveType.lifecycleState), targetStates.includes(models.DiscoveryLifecycleState.Deleted));
        });
    }
    /**
     * Waits forTargetAlertPolicyAssociation till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetTargetAlertPolicyAssociationResponse | null (null in case of 404 response)
     */
    forTargetAlertPolicyAssociation(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTargetAlertPolicyAssociation(request), response => targetStates.includes(response.targetAlertPolicyAssociation.lifecycleState), targetStates.includes(models.AlertPolicyLifecycleState.Deleted));
        });
    }
    /**
     * Waits forTargetDatabase till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetTargetDatabaseResponse | null (null in case of 404 response)
     */
    forTargetDatabase(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTargetDatabase(request), response => targetStates.includes(response.targetDatabase.lifecycleState), targetStates.includes(models.TargetDatabaseLifecycleState.Deleted));
        });
    }
    /**
     * Waits forUserAssessment till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetUserAssessmentResponse | null (null in case of 404 response)
     */
    forUserAssessment(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getUserAssessment(request), response => targetStates.includes(response.userAssessment.lifecycleState), targetStates.includes(models.UserAssessmentLifecycleState.Deleted));
        });
    }
    /**
     * Waits forUserAssessmentComparison till it reaches any of the provided states
     *
     * @param request the request to send
     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states
     * @return response returns GetUserAssessmentComparisonResponse
     */
    forUserAssessmentComparison(request, ...targetStates) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getUserAssessmentComparison(request), response => targetStates.includes(response.userAssessmentComparison.lifecycleState));
        });
    }
    /**
     * Waits forWorkRequest
     *
     * @param request the request to send
     * @return response returns GetWorkRequestResponse
     */
    forWorkRequest(request) {
        return __awaiter(this, void 0, void 0, function* () {
            return oci_common_1.genericWaiter(this.config, () => this.client.getWorkRequest(request), response => (response.workRequest.timeFinished ? true : false));
        });
    }
}
exports.DataSafeWaiter = DataSafeWaiter;
//# sourceMappingURL=datasafe-waiter.js.map