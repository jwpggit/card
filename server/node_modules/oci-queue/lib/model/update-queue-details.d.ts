/**
 * Queue API
 * A description of the Queue API
 * OpenAPI spec version: 20210201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The information to be updated.
 */
export interface UpdateQueueDetails {
    /**
     * Queue Identifier
     */
    "displayName"?: string;
    /**
     * The default visibility of the messages consumed from the queue. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "visibilityInSeconds"?: number;
    /**
     * The default polling timeout of the messages in the queue, in seconds. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "timeoutInSeconds"?: number;
    /**
     * The number of times a message can be delivered to a consumer before being moved to the dead letter queue.
     * A value of 0 indicates that the DLQ is not used.
     * Changing that value to a lower threshold does not retro-actively move in-flight messages in the dead letter queue.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "deadLetterQueueDeliveryCount"?: number;
    /**
     * Id of the custom master encryption key which will be used to encrypt messages content. String of length 0 means the custom key should be removed from queue
     */
    "customEncryptionKeyId"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace UpdateQueueDetails {
    function getJsonObj(obj: UpdateQueueDetails): object;
    function getDeserializedJsonObj(obj: UpdateQueueDetails): object;
}
