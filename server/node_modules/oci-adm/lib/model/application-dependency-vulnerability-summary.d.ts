/**
 * Application Dependency Management API
 * Use the Application Dependency Management API to create knowledge bases and vulnerability audits.  For more information, see [ADM](/Content/application-dependency-management/home.htm).
 * OpenAPI spec version: 20220421
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * An Application Dependency Vulnerability represents a single dependency in the application.
 * An Application Dependency Vulnerability can be associated with eventual Vulnerabilities.
 * Each Application Dependency is uniquely defined by a nodeId and lists eventual dependencies on which it depends.
 *
 */
export interface ApplicationDependencyVulnerabilitySummary {
    /**
     * Group Artifact Version (GAV) identifier (Group:Artifact:Version), for example org.graalvm.nativeimage:svm:21.1.0.
     */
    "gav": string;
    /**
     * Unique identifier of an Application Dependency, for example nodeId1.
     */
    "nodeId": string;
    /**
     * List of Application Dependencies on which this Application Dependency depends, each identified by its nodeId.
     */
    "applicationDependencyNodeIds": Array<string>;
    /**
     * List of vulnerabilities for the Application Dependency.
     */
    "vulnerabilities": Array<model.Vulnerability>;
    /**
     * Indicates if the artifact is found in the knowledge base.
     */
    "isFoundInKnowledgeBase": boolean;
}
export declare namespace ApplicationDependencyVulnerabilitySummary {
    function getJsonObj(obj: ApplicationDependencyVulnerabilitySummary): object;
    function getDeserializedJsonObj(obj: ApplicationDependencyVulnerabilitySummary): object;
}
