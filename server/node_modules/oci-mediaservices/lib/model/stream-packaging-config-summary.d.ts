/**
 * Media Services API
 * Media Services (includes Media Flow and Media Streams) is a fully managed service for processing media (video) source content. Use Media Flow and Media Streams to transcode and package digital video using configurable workflows and stream video outputs.

Use the Media Services API to configure media workflows and run Media Flow jobs, create distribution channels, ingest assets, create Preview URLs and play assets. For more information, see [Media Flow](/iaas/Content/dms-mediaflow/home.htm) and [Media Streams](/iaas/Content/dms-mediastream/home.htm).

 * OpenAPI spec version: 20211101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Summary of the Packaging Configuration.
 */
export interface StreamPackagingConfigSummary {
    /**
     * Unique identifier that is immutable on creation.
     */
    "id": string;
    /**
     * Compartment Identifier.
     */
    "compartmentId": string;
    /**
     * Unique identifier of the distribution channel that this stream packaging configuration belongs to.
     */
    "distributionChannelId": string;
    /**
     * Stream Packaging Configuration display name. Avoid entering confidential information.
     */
    "displayName": string;
    /**
     * The time when the Distribution Channel was created. An RFC3339 formatted datetime string.
     */
    "timeCreated"?: Date;
    /**
     * The time when the Distribution Channel was updated. An RFC3339 formatted datetime string.
     */
    "timeUpdated"?: Date;
    /**
     * The current state of the Distribution Channel.
     */
    "lifecycleState"?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
     *
     */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.
     * Example: `{\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}`
     *
     */
    "systemTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
}
export declare namespace StreamPackagingConfigSummary {
    function getJsonObj(obj: StreamPackagingConfigSummary): object;
    function getDeserializedJsonObj(obj: StreamPackagingConfigSummary): object;
}
