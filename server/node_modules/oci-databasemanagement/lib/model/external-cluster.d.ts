/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The details of an external cluster.
 */
export interface ExternalCluster {
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the external cluster.
     */
    "id": string;
    /**
     * The user-friendly name for the external cluster. The name does not have to be unique.
     */
    "displayName": string;
    /**
     * The name of the external cluster.
     */
    "componentName": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    "compartmentId": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster is a part of.
     */
    "externalDbSystemId": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the external connector.
     */
    "externalConnectorId"?: string;
    /**
     * The directory in which Oracle Grid Infrastructure is installed.
     */
    "gridHome"?: string;
    /**
     * Indicates whether the cluster is Oracle Flex Cluster or not.
     */
    "isFlexCluster"?: boolean;
    /**
     * The additional details of the external cluster defined in `{\"key\": \"value\"}` format.
     * Example: `{\"bar-key\": \"value\"}`
     *
     */
    "additionalDetails"?: {
        [key: string]: string;
    };
    /**
     * The current lifecycle state of the external cluster.
     */
    "lifecycleState": ExternalCluster.LifecycleState;
    /**
     * Additional information about the current lifecycle state.
     */
    "lifecycleDetails"?: string;
    /**
     * The list of network address configurations of the external cluster.
     */
    "networkConfigurations"?: Array<model.ExternalClusterNetworkConfiguration>;
    /**
     * The list of Virtual IP (VIP) configurations of the external cluster.
     */
    "vipConfigurations"?: Array<model.ExternalClusterVipConfiguration>;
    /**
     * The list of Single Client Access Name (SCAN) configurations of the external cluster.
     */
    "scanConfigurations"?: Array<model.ExternalClusterScanListenerConfiguration>;
    /**
     * The location of the Oracle Cluster Registry (OCR).
     */
    "ocrFileLocation"?: string;
    /**
     * The date and time the external cluster was created.
     */
    "timeCreated": Date;
    /**
     * The date and time the external cluster was last updated.
     */
    "timeUpdated": Date;
    /**
     * The cluster version.
     */
    "version"?: string;
}
export declare namespace ExternalCluster {
    enum LifecycleState {
        Creating = "CREATING",
        NotConnected = "NOT_CONNECTED",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Updating = "UPDATING",
        Deleting = "DELETING",
        Deleted = "DELETED",
        Failed = "FAILED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ExternalCluster): object;
    function getDeserializedJsonObj(obj: ExternalCluster): object;
}
