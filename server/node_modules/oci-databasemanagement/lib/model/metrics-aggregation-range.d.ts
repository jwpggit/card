/**
 * Database Management API
 * Use the Database Management API to perform tasks such as obtaining performance and resource usage metrics
for a fleet of Managed Databases or a specific Managed Database, creating Managed Database Groups, and
running a SQL job on a Managed Database or Managed Database Group.

 * OpenAPI spec version: 20201101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The set of aggregated data returned for a metric.
 */
export interface MetricsAggregationRange {
    "header"?: model.DbManagementAnalyticsMetric;
    /**
      * The list of metrics returned for the specified request. Each of the metrics
  * has a `metricName` and additional properties like `metadata`, `dimensions`.
  * If a property is not set, then use the value from `header`.
  * <p>
  Suppose `m` be an item in the `metrics` array:
  * - If `m.metricName` is not set, use `header.metricName` instead
  * - If `m.durationInSeconds` is not set, use `header.durationInSeconds` instead
  * - If `m.dimensions` is not set, use `header.dimensions` instead
  * - If `m.metadata` is not set, use `header.metadata` instead
  *
      */
    "metrics"?: Array<model.DbManagementAnalyticsMetric>;
    /**
     * The beginning of the time range (inclusive) of the returned metric data. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "rangeStartTimeInEpochSeconds"?: number;
    /**
     * The end of the time range (exclusive) of the returned metric data. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "rangeEndTimeInEpochSeconds"?: number;
}
export declare namespace MetricsAggregationRange {
    function getJsonObj(obj: MetricsAggregationRange): object;
    function getDeserializedJsonObj(obj: MetricsAggregationRange): object;
}
