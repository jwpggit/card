"use strict";
/**
 * Speech API
 * The OCI Speech Service harnesses the power of spoken language by allowing developers to easily convert file-based data containing human speech into highly accurate text transcriptions.
 * OpenAPI spec version: 20220101
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TranscriptionModelDetails = void 0;
var TranscriptionModelDetails;
(function (TranscriptionModelDetails) {
    let Domain;
    (function (Domain) {
        Domain["Generic"] = "GENERIC";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Domain["UnknownValue"] = "UNKNOWN_VALUE";
    })(Domain = TranscriptionModelDetails.Domain || (TranscriptionModelDetails.Domain = {}));
    let LanguageCode;
    (function (LanguageCode) {
        LanguageCode["EnUs"] = "en-US";
        LanguageCode["EsEs"] = "es-ES";
        LanguageCode["PtBr"] = "pt-BR";
        LanguageCode["EnGb"] = "en-GB";
        LanguageCode["EnAu"] = "en-AU";
        LanguageCode["EnIn"] = "en-IN";
        LanguageCode["HiIn"] = "hi-IN";
        LanguageCode["FrFr"] = "fr-FR";
        LanguageCode["DeDe"] = "de-DE";
        LanguageCode["ItIt"] = "it-IT";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LanguageCode["UnknownValue"] = "UNKNOWN_VALUE";
    })(LanguageCode = TranscriptionModelDetails.LanguageCode || (TranscriptionModelDetails.LanguageCode = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    TranscriptionModelDetails.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    TranscriptionModelDetails.getDeserializedJsonObj = getDeserializedJsonObj;
})(TranscriptionModelDetails = exports.TranscriptionModelDetails || (exports.TranscriptionModelDetails = {}));
//# sourceMappingURL=transcription-model-details.js.map