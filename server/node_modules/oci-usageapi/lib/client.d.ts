/**
 * Usage API
 * Use the Usage API to view your Oracle Cloud usage and costs. The API allows you to request data that meets the specified filter criteria, and to group that data by the dimension of your choosing. The Usage API is used by the Cost Analysis tool in the Console. Also see [Using the Usage API](/Content/Billing/Concepts/costanalysisoverview.htm#cost_analysis_using_the_api) for more information.
 * OpenAPI spec version: 20200107
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
import * as requests from "./request";
import * as responses from "./response";
import { UsageapiWaiter } from "./usageapi-waiter";
export declare enum UsageapiApiKeys {
}
/**
 * This service client uses {@link common.CircuitBreaker.DefaultConfiguration} for all the operations by default if no circuit breaker configuration is defined by the user.
 */
export declare class UsageapiClient {
    protected static serviceEndpointTemplate: string;
    protected static endpointServiceName: string;
    protected "_realmSpecificEndpointTemplateEnabled": boolean;
    protected "_endpoint": string;
    protected "_defaultHeaders": any;
    protected "_waiters": UsageapiWaiter;
    protected "_clientConfiguration": common.ClientConfiguration;
    protected _circuitBreaker: null;
    protected _httpOptions: any;
    targetService: string;
    protected _regionId: string;
    protected "_region": common.Region;
    protected _lastSetRegionOrRegionId: string;
    protected _httpClient: common.HttpClient;
    constructor(params: common.AuthParams, clientConfiguration?: common.ClientConfiguration);
    /**
     * Get the endpoint that is being used to call (ex, https://www.example.com).
     */
    get endpoint(): string;
    /**
     * Sets the endpoint to call (ex, https://www.example.com).
     * @param endpoint The endpoint of the service.
     */
    set endpoint(endpoint: string);
    get logger(): import("oci-common/lib/log").Logger;
    /**
     * Determines whether realm specific endpoint should be used or not.
     * Set realmSpecificEndpointTemplateEnabled to "true" if the user wants to enable use of realm specific endpoint template, otherwise set it to "false"
     * @param realmSpecificEndpointTemplateEnabled flag to enable the use of realm specific endpoint template
     */
    set useRealmSpecificEndpointTemplate(realmSpecificEndpointTemplateEnabled: boolean);
    /**
     * Sets the region to call (ex, Region.US_PHOENIX_1).
     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.
     * @param region The region of the service.
     */
    set region(region: common.Region);
    /**
     * Sets the regionId to call (ex, 'us-phoenix-1').
     *
     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.
     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1
     * and then call {@link #endpoint(String) endpoint}.
     * @param regionId The public region ID.
     */
    set regionId(regionId: string);
    /**
     * Creates a new UsageapiWaiter for resources for this service.
     *
     * @param config The waiter configuration for termination and delay strategy
     * @return The service waiters.
     */
    createWaiters(config?: common.WaiterConfiguration): UsageapiWaiter;
    /**
     * Gets the waiters available for resources for this service.
     *
     * @return The service waiters.
     */
    getWaiters(): UsageapiWaiter;
    /**
     * Returns the created custom table.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateCustomTableRequest
     * @return CreateCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/CreateCustomTable.ts.html |here} to see how to use CreateCustomTable API.
     */
    createCustomTable(createCustomTableRequest: requests.CreateCustomTableRequest): Promise<responses.CreateCustomTableResponse>;
    /**
     * Returns the created query.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateQueryRequest
     * @return CreateQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/CreateQuery.ts.html |here} to see how to use CreateQuery API.
     */
    createQuery(createQueryRequest: requests.CreateQueryRequest): Promise<responses.CreateQueryResponse>;
    /**
     * Returns the created schedule.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param CreateScheduleRequest
     * @return CreateScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/CreateSchedule.ts.html |here} to see how to use CreateSchedule API.
     */
    createSchedule(createScheduleRequest: requests.CreateScheduleRequest): Promise<responses.CreateScheduleResponse>;
    /**
     * Delete a saved custom table by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteCustomTableRequest
     * @return DeleteCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/DeleteCustomTable.ts.html |here} to see how to use DeleteCustomTable API.
     */
    deleteCustomTable(deleteCustomTableRequest: requests.DeleteCustomTableRequest): Promise<responses.DeleteCustomTableResponse>;
    /**
     * Delete a saved query by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteQueryRequest
     * @return DeleteQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/DeleteQuery.ts.html |here} to see how to use DeleteQuery API.
     */
    deleteQuery(deleteQueryRequest: requests.DeleteQueryRequest): Promise<responses.DeleteQueryResponse>;
    /**
     * Delete a saved scheduled report by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param DeleteScheduleRequest
     * @return DeleteScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/DeleteSchedule.ts.html |here} to see how to use DeleteSchedule API.
     */
    deleteSchedule(deleteScheduleRequest: requests.DeleteScheduleRequest): Promise<responses.DeleteScheduleResponse>;
    /**
     * Returns the saved custom table.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetCustomTableRequest
     * @return GetCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/GetCustomTable.ts.html |here} to see how to use GetCustomTable API.
     */
    getCustomTable(getCustomTableRequest: requests.GetCustomTableRequest): Promise<responses.GetCustomTableResponse>;
    /**
     * Returns the saved query.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetQueryRequest
     * @return GetQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/GetQuery.ts.html |here} to see how to use GetQuery API.
     */
    getQuery(getQueryRequest: requests.GetQueryRequest): Promise<responses.GetQueryResponse>;
    /**
     * Returns the saved schedule.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetScheduleRequest
     * @return GetScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/GetSchedule.ts.html |here} to see how to use GetSchedule API.
     */
    getSchedule(getScheduleRequest: requests.GetScheduleRequest): Promise<responses.GetScheduleResponse>;
    /**
     * Returns the saved schedule run.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param GetScheduledRunRequest
     * @return GetScheduledRunResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/GetScheduledRun.ts.html |here} to see how to use GetScheduledRun API.
     */
    getScheduledRun(getScheduledRunRequest: requests.GetScheduledRunRequest): Promise<responses.GetScheduledRunResponse>;
    /**
     * Returns the saved custom table list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListCustomTablesRequest
     * @return ListCustomTablesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/ListCustomTables.ts.html |here} to see how to use ListCustomTables API.
     */
    listCustomTables(listCustomTablesRequest: requests.ListCustomTablesRequest): Promise<responses.ListCustomTablesResponse>;
    /**
     * Returns the saved query list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListQueriesRequest
     * @return ListQueriesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/ListQueries.ts.html |here} to see how to use ListQueries API.
     */
    listQueries(listQueriesRequest: requests.ListQueriesRequest): Promise<responses.ListQueriesResponse>;
    /**
     * Returns schedule history list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListScheduledRunsRequest
     * @return ListScheduledRunsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/ListScheduledRuns.ts.html |here} to see how to use ListScheduledRuns API.
     */
    listScheduledRuns(listScheduledRunsRequest: requests.ListScheduledRunsRequest): Promise<responses.ListScheduledRunsResponse>;
    /**
     * Returns the saved schedule list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param ListSchedulesRequest
     * @return ListSchedulesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/ListSchedules.ts.html |here} to see how to use ListSchedules API.
     */
    listSchedules(listSchedulesRequest: requests.ListSchedulesRequest): Promise<responses.ListSchedulesResponse>;
    /**
     * Returns the configurations list for the UI drop-down list.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedConfigurationsRequest
     * @return RequestSummarizedConfigurationsResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/RequestSummarizedConfigurations.ts.html |here} to see how to use RequestSummarizedConfigurations API.
     */
    requestSummarizedConfigurations(requestSummarizedConfigurationsRequest: requests.RequestSummarizedConfigurationsRequest): Promise<responses.RequestSummarizedConfigurationsResponse>;
    /**
     * Returns usage for the given account.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param RequestSummarizedUsagesRequest
     * @return RequestSummarizedUsagesResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/RequestSummarizedUsages.ts.html |here} to see how to use RequestSummarizedUsages API.
     */
    requestSummarizedUsages(requestSummarizedUsagesRequest: requests.RequestSummarizedUsagesRequest): Promise<responses.RequestSummarizedUsagesResponse>;
    /**
     * Update a saved custom table by table id.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateCustomTableRequest
     * @return UpdateCustomTableResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/UpdateCustomTable.ts.html |here} to see how to use UpdateCustomTable API.
     */
    updateCustomTable(updateCustomTableRequest: requests.UpdateCustomTableRequest): Promise<responses.UpdateCustomTableResponse>;
    /**
     * Update a saved query by the OCID.
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateQueryRequest
     * @return UpdateQueryResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/UpdateQuery.ts.html |here} to see how to use UpdateQuery API.
     */
    updateQuery(updateQueryRequest: requests.UpdateQueryRequest): Promise<responses.UpdateQueryResponse>;
    /**
     * Update a saved schedule
     *
     * This operation does not retry by default if the user has not defined a retry configuration.
     * @param UpdateScheduleRequest
     * @return UpdateScheduleResponse
     * @throws OciError when an error occurs
     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.62.0/usageapi/UpdateSchedule.ts.html |here} to see how to use UpdateSchedule API.
     */
    updateSchedule(updateScheduleRequest: requests.UpdateScheduleRequest): Promise<responses.UpdateScheduleResponse>;
}
