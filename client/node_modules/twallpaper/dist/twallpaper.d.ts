import type { PatternOptions, TWallpaperOptions } from './types.js';
export declare class TWallpaper {
    private container?;
    private options?;
    private width;
    private height;
    private phase;
    private tail;
    private tails;
    private scrollTails;
    private timestamp;
    private frametime;
    private scrollDelta;
    private scrollTicking;
    private frames;
    private rgb;
    private curve;
    private positions;
    private phases;
    private interval;
    private raf;
    private wheel;
    private hc;
    private hctx;
    private canvas;
    private ctx;
    private pattern;
    constructor(container?: HTMLElement, options?: TWallpaperOptions);
    private getPositions;
    private curPosition;
    private changeTail;
    private onWheel;
    private drawOnWheel;
    private drawNextPositionAnimated;
    private getGradientImageData;
    private drawImageData;
    private drawGradient;
    private requestAnimate;
    private doAnimate;
    /**
     * Initialize wallpaper
     * @param options wallpaper options
     * @param container container element
     */
    init(options?: TWallpaperOptions, container?: HTMLElement): void;
    /**
     * Dispose wallpaper
     */
    dispose(): void;
    /**
     * Tails speed animation
     * @param tails number of tails
     * @default 90
     */
    updateTails(tails?: number): void;
    /**
     * Frame time is just the time between frames
     * @param fps frames per second
     * @default 30
     */
    updateFrametime(fps?: number): void;
    /**
     * Update pattern options
     * @param pattern pattern options
     */
    updatePattern(pattern: PatternOptions): void;
    /**
     * Colors for gradient, use 1-4 hex codes
     * @param hexCodes hex colors
     */
    updateColors(hexCodes: string[]): void;
    /**
     * Next animation position (animation turns off after use)
     * @param callback execution `toNextPosition` is finished
     */
    toNextPosition(callback?: () => void): void;
    /**
     * Start or stop animation
     * @param start start or stop animation
     * @default true
     */
    animate(start?: boolean): void;
    /**
     * Start or stop mouse scroll animation
     * @param start start or stop scroll animation
     * @default false
     */
    scrollAnimate(start?: boolean): void;
}
