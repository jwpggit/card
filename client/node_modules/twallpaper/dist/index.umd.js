/**
 * name: twallpaper
 * description: ðŸŒˆ Multicolor gradient wallpaper created algorithmically and shimmers smoothly.
 * version: 2.1.0
 * homepage: https://twallpaper.js.org
 */
(function(l,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(l=typeof globalThis<"u"?globalThis:l||self,f(l.TWallpaper={}))})(this,function(l){"use strict";function f(h){const t=k(h);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}function k(h){return h.length===4&&(h=`${h[1]}${h[1]}${h[2]}${h[2]}${h[3]}${h[3]}`),/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(h)}const C=[0,.25,.5,.75,1,1.5,2,2.5,3,3.5,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18.3,18.6,18.9,19.2,19.5,19.8,20.1,20.4,20.7,21,21.3,21.6,21.9,22.2,22.5,22.8,23.1,23.4,23.7,24,24.3,24.6,24.9,25.2,25.5,25.8,26.1,26.3,26.4,26.5,26.6,26.7,26.8,26.9,27],v=[{x:.8,y:.1},{x:.6,y:.2},{x:.35,y:.25},{x:.25,y:.6},{x:.2,y:.9},{x:.4,y:.8},{x:.65,y:.75},{x:.75,y:.4}];class P{constructor(t,s){this.container=t,this.options=s,this.wheel=this.onWheel.bind(this)}width=50;height=50;phase=0;tail=0;tails;scrollTails=50;timestamp;frametime;scrollDelta=0;scrollTicking=!1;frames=[];rgb=[];curve=C;positions=v;phases=v.length;interval;raf;wheel;hc;hctx;canvas;ctx;pattern;getPositions(t){const s=[...this.positions];for(;t>0;)s.push(s.shift()),t--;const i=[];for(let e=0;e<s.length;e+=2)i.push(s[e]);return i}curPosition(t,s){s%=this.tails;const i=this.getPositions(t%this.phases);if(s){const e=this.getPositions(++t%this.phases),n=(e[0].x-i[0].x)/this.tails,d=(e[0].y-i[0].y)/this.tails,o=(e[1].x-i[1].x)/this.tails,u=(e[1].y-i[1].y)/this.tails,p=(e[2].x-i[2].x)/this.tails,x=(e[2].y-i[2].y)/this.tails,c=(e[3].x-i[3].x)/this.tails,y=(e[3].y-i[3].y)/this.tails;return[{x:i[0].x+n*s,y:i[0].y+d*s},{x:i[1].x+o*s,y:i[1].y+u*s},{x:i[2].x+p*s,y:i[2].y+x*s},{x:i[3].x+c*s,y:i[3].y+y*s}]}return i}changeTail(t){for(this.tail+=t;this.tail>=this.tails;)this.tail-=this.tails,this.phase++,this.phase>=this.phases&&(this.phase-=this.phases);for(;this.tail<0;)this.tail+=this.tails,this.phase--,this.phase<0&&(this.phase+=this.phases)}onWheel(t){this.interval||(this.scrollDelta+=t.deltaY,this.scrollTicking||(requestAnimationFrame(()=>this.drawOnWheel()),this.scrollTicking=!0))}drawOnWheel(){let t=this.scrollDelta/this.scrollTails;if(this.scrollDelta%=this.scrollTails,t=t>0?Math.floor(t):Math.ceil(t),t){this.changeTail(t);const s=this.curPosition(this.phase,this.tail);this.drawGradient(s)}this.scrollTicking=!1}drawNextPositionAnimated(t){if(this.frames.length>0){const s=this.frames.shift();this.drawImageData(s)}else clearInterval(this.interval),this.interval=null,t&&t()}getGradientImageData(t){const s=this.hctx.createImageData(this.width,this.height),i=s.data;let e=0;for(let n=0;n<this.height;n++){const o=n/this.height-.5,u=o*o;for(let p=0;p<this.width;p++){const c=p/this.width-.5,a=.35*Math.sqrt(c*c+u),g=a*a*.8*8,T=Math.sin(g),D=Math.cos(g),L=Math.max(0,Math.min(1,.5+c*D-o*T)),Y=Math.max(0,Math.min(1,.5+c*T+o*D));let w=0,b=0,I=0,A=0;for(let m=0;m<this.rgb.length;m++){const q=t[m].x,E=t[m].y,M=L-q,$=Y-E;let r=Math.max(0,.9-Math.sqrt(M*M+$*$));r=r*r*r*r,w+=r,b+=r*this.rgb[m].r/255,I+=r*this.rgb[m].g/255,A+=r*this.rgb[m].b/255}i[e++]=b/w*255,i[e++]=I/w*255,i[e++]=A/w*255,i[e++]=255}}return s}drawImageData(t){this.hctx.putImageData(t,0,0),this.ctx.drawImage(this.hc,0,0,this.width,this.height)}drawGradient(t){this.drawImageData(this.getGradientImageData(t))}requestAnimate(){this.raf=requestAnimationFrame(()=>this.doAnimate())}doAnimate(){const t=+Date.now();if(t-this.timestamp<this.frametime)return this.requestAnimate();this.timestamp=t,this.changeTail(1);const s=this.curPosition(this.phase,this.tail);this.drawGradient(s),this.requestAnimate()}init(t,s){if(this.options=t?{...this.options,...t}:this.options,this.container=s??this.container,!this.container||!this.options.colors.length)throw new Error("Container or colors do not exist");this.dispose(),this.hc||(this.hc=document.createElement("canvas"),this.hc.width=this.width,this.hc.height=this.height,this.hctx=this.hc.getContext("2d")),this.canvas=document.createElement("canvas"),this.canvas.classList.add("tw-canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.ctx=this.canvas.getContext("2d"),this.container.appendChild(this.canvas),this.container.classList.contains("tw-wrap")||this.container.classList.add("tw-wrap"),this.options.pattern&&(this.pattern=document.createElement("div"),this.pattern.classList.add("tw-pattern"),this.updatePattern(this.options.pattern),this.container.appendChild(this.pattern)),this.animate(this.options.animate),this.updateTails(this.options.tails),this.updateColors(this.options.colors),this.updateFrametime(this.options.fps),this.scrollAnimate(this.options.scrollAnimate)}dispose(){this.hc&&(clearInterval(this.interval),this.interval=null,this.animate(!1),this.canvas.remove(),this.pattern?.remove(),this.hc.remove(),this.frames=[])}updateTails(t=90){t>0&&(this.tails=t)}updateFrametime(t=30){this.frametime=1e3/t}updatePattern(t){if(!this.pattern||!this.container)return;const{size:s="auto",opacity:i=.5,blur:e=0,background:n="#000",image:d,mask:o}=t;this.container.style.setProperty("--tw-size",s),this.container.style.setProperty("--tw-opacity",`${i}`),this.container.style.setProperty("--tw-blur",`${e}px`),this.container.style.setProperty("--tw-background",n),d?this.container.style.setProperty("--tw-image",`url(${d})`):this.container.style.removeProperty("--tw-image"),o?this.canvas.classList.add("tw-mask"):this.canvas.classList.remove("tw-mask")}updateColors(t){const s=t.reduce((i,e)=>{const n=f(e);return n&&i.push(n),i},[]).slice(0,4);if(!s.length)throw new Error("Colors do not exist or are not valid hex codes (e.g. #fff or #ffffff)");this.rgb=s}toNextPosition(t){clearInterval(this.interval),this.animate(!1),this.frames=[];const s=this.getPositions(this.phase%this.phases);this.phase++;const i=this.getPositions(this.phase%this.phases),e=27,n=(i[0].x-s[0].x)/e,d=(i[0].y-s[0].y)/e,o=(i[1].x-s[1].x)/e,u=(i[1].y-s[1].y)/e,p=(i[2].x-s[2].x)/e,x=(i[2].y-s[2].y)/e,c=(i[3].x-s[3].x)/e,y=(i[3].y-s[3].y)/e;for(let a=0;a<this.curve.length;a++){const g=[{x:s[0].x+n*this.curve[a],y:s[0].y+d*this.curve[a]},{x:s[1].x+o*this.curve[a],y:s[1].y+u*this.curve[a]},{x:s[2].x+p*this.curve[a],y:s[2].y+x*this.curve[a]},{x:s[3].x+c*this.curve[a],y:s[3].y+y*this.curve[a]}];this.frames.push(this.getGradientImageData(g))}this.interval=setInterval(()=>{this.drawNextPositionAnimated(t)},this.frametime)}animate(t=!0){t?this.doAnimate():this.raf&&(cancelAnimationFrame(this.raf),this.raf=null)}scrollAnimate(t=!1){t?document.addEventListener("wheel",this.wheel):document.removeEventListener("wheel",this.wheel)}}l.TWallpaper=P,l.default=P,Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
